syntax = "proto3";
package rpcpb;
option go_package = "github.com/bishopfox/sliver/protobuf/rpcpb";

import "commonpb/common.proto";
import "sliverpb/sliver.proto";
import "clientpb/client.proto";


service SliverRPC {

    // *** Version ***
    rpc GetVersion(commonpb.Empty) returns (clientpb.Version);

    // *** Operator Commands *** 
    rpc GetOperators(commonpb.Empty) returns (clientpb.Operators);

    // *** Generic ***
    rpc Kill(sliverpb.KillReq) returns (commonpb.Empty);

    // *** Sessions ***
    rpc GetSessions(commonpb.Empty) returns (clientpb.Sessions);
    rpc UpdateSession(clientpb.UpdateSession) returns (clientpb.Session);

    // *** Beacons ***
    rpc GetBeacons(commonpb.Empty) returns (clientpb.Beacons);
    rpc GetBeacon(clientpb.Beacon) returns (clientpb.Beacon);
    rpc RmBeacon(clientpb.Beacon) returns (commonpb.Empty);
    rpc GetBeaconTasks(clientpb.Beacon) returns (clientpb.BeaconTasks);
    rpc GetBeaconTaskContent(clientpb.BeaconTask) returns (clientpb.BeaconTask);

    // ***Threat monitoring ***
    rpc MonitorStart(commonpb.Empty) returns (commonpb.Response);
    rpc MonitorStop(commonpb.Empty) returns (commonpb.Empty);
    
    // *** Jobs ***
    rpc GetJobs(commonpb.Empty) returns (clientpb.Jobs);
    rpc KillJob(clientpb.KillJobReq) returns (clientpb.KillJob);

    // *** Listeners ***
    rpc StartMTLSListener(clientpb.MTLSListenerReq) returns (clientpb.MTLSListener);
    rpc StartWGListener(clientpb.WGListenerReq) returns (clientpb.WGListener);
    rpc StartDNSListener(clientpb.DNSListenerReq) returns (clientpb.DNSListener);
    rpc StartHTTPSListener(clientpb.HTTPListenerReq) returns (clientpb.HTTPListener);
    rpc StartHTTPListener(clientpb.HTTPListenerReq) returns (clientpb.HTTPListener);

    // *** Stager Listener ***
    rpc StartTCPStagerListener(clientpb.StagerListenerReq) returns(clientpb.StagerListener);
    rpc StartHTTPStagerListener(clientpb.StagerListenerReq) returns(clientpb.StagerListener);

    // *** Loot ***
    rpc LootAdd(clientpb.Loot) returns(clientpb.Loot);
    rpc LootRm(clientpb.Loot) returns(commonpb.Empty);
    rpc LootUpdate(clientpb.Loot) returns(clientpb.Loot);
    rpc LootContent(clientpb.Loot) returns(clientpb.Loot);
    rpc LootAll(commonpb.Empty) returns(clientpb.AllLoot);
    rpc LootAllOf(clientpb.Loot) returns(clientpb.AllLoot);

    // *** Hosts ***
    rpc Hosts(commonpb.Empty) returns(clientpb.AllHosts);
    rpc Host(clientpb.Host) returns(clientpb.Host);
    rpc HostRm(clientpb.Host) returns(commonpb.Empty);
    rpc HostIOCRm(clientpb.IOC) returns(commonpb.Empty);

    // *** Implants ***
    rpc Generate(clientpb.GenerateReq) returns (clientpb.Generate);
    rpc Regenerate(clientpb.RegenerateReq) returns (clientpb.Generate);
    rpc ImplantBuilds(commonpb.Empty) returns (clientpb.ImplantBuilds);
    rpc DeleteImplantBuild(clientpb.DeleteReq) returns (commonpb.Empty);
    rpc Canaries(commonpb.Empty) returns (clientpb.Canaries);
    rpc GenerateWGClientConfig(commonpb.Empty) returns (clientpb.WGClientConfig);
    rpc GenerateUniqueIP(commonpb.Empty) returns (clientpb.UniqueWGIP);
    rpc ImplantProfiles(commonpb.Empty) returns (clientpb.ImplantProfiles);
    rpc DeleteImplantProfile(clientpb.DeleteReq) returns (commonpb.Empty);
    rpc SaveImplantProfile(clientpb.ImplantProfile) returns (clientpb.ImplantProfile);
    rpc MsfStage(clientpb.MsfStagerReq) returns (clientpb.MsfStager);
    rpc ShellcodeRDI(clientpb.ShellcodeRDIReq) returns (clientpb.ShellcodeRDI);
    rpc GetCompiler(commonpb.Empty) returns (clientpb.Compiler);

    // *** Websites ***
    rpc Websites(commonpb.Empty) returns (clientpb.Websites);
    rpc Website(clientpb.Website) returns (clientpb.Website);
    rpc WebsiteRemove(clientpb.Website) returns (commonpb.Empty);
    rpc WebsiteAddContent(clientpb.WebsiteAddContent) returns (clientpb.Website);
    rpc WebsiteUpdateContent(clientpb.WebsiteAddContent) returns (clientpb.Website);
    rpc WebsiteRemoveContent(clientpb.WebsiteRemoveContent) returns (clientpb.Website);

    // *** Session Interactions ***
    rpc Ping(sliverpb.Ping) returns (sliverpb.Ping);
    rpc Ps(sliverpb.PsReq) returns (sliverpb.Ps);
    rpc Terminate(sliverpb.TerminateReq) returns (sliverpb.Terminate);
    rpc Ifconfig(sliverpb.IfconfigReq) returns (sliverpb.Ifconfig);
    rpc Netstat(sliverpb.NetstatReq) returns (sliverpb.Netstat);
    rpc Ls(sliverpb.LsReq) returns (sliverpb.Ls);
    rpc Cd(sliverpb.CdReq) returns (sliverpb.Pwd);
    rpc Pwd(sliverpb.PwdReq) returns (sliverpb.Pwd);
    rpc Rm(sliverpb.RmReq) returns (sliverpb.Rm);
    rpc Mkdir(sliverpb.MkdirReq) returns (sliverpb.Mkdir);
    rpc Download(sliverpb.DownloadReq) returns (sliverpb.Download);
    rpc Upload(sliverpb.UploadReq) returns (sliverpb.Upload);
    rpc ProcessDump(sliverpb.ProcessDumpReq) returns (sliverpb.ProcessDump);
    rpc RunAs(sliverpb.RunAsReq) returns (sliverpb.RunAs);
    rpc Impersonate(sliverpb.ImpersonateReq) returns (sliverpb.Impersonate);
    rpc RevToSelf(sliverpb.RevToSelfReq) returns (sliverpb.RevToSelf);
    rpc GetSystem(clientpb.GetSystemReq) returns (sliverpb.GetSystem);
    rpc Task(sliverpb.TaskReq) returns (sliverpb.Task);
    rpc Msf(clientpb.MSFReq) returns (sliverpb.Task);
    rpc MsfRemote(clientpb.MSFRemoteReq) returns (sliverpb.Task);
    rpc ExecuteAssembly(sliverpb.ExecuteAssemblyReq) returns (sliverpb.ExecuteAssembly);
    rpc Migrate(clientpb.MigrateReq) returns (sliverpb.Migrate);
    rpc Execute(sliverpb.ExecuteReq) returns (sliverpb.Execute);
    rpc ExecuteToken(sliverpb.ExecuteTokenReq) returns (sliverpb.Execute);
    rpc Sideload(sliverpb.SideloadReq) returns (sliverpb.Sideload);
    rpc SpawnDll(sliverpb.InvokeSpawnDllReq) returns (sliverpb.SpawnDll);
    rpc Screenshot(sliverpb.ScreenshotReq) returns (sliverpb.Screenshot);
    
    // *** Pivots ***
    rpc PivotStartListener(sliverpb.PivotStartListenerReq) returns (sliverpb.PivotListener);
    rpc PivotStopListener(sliverpb.PivotStopListenerReq) returns (commonpb.Empty);
    rpc PivotSessionListeners(sliverpb.PivotListenersReq) returns (sliverpb.PivotListeners);
    rpc PivotGraph(commonpb.Empty) returns (clientpb.PivotGraph);

    rpc StartService(sliverpb.StartServiceReq) returns (sliverpb.ServiceInfo);
    rpc StopService(sliverpb.StopServiceReq) returns (sliverpb.ServiceInfo);
    rpc RemoveService(sliverpb.RemoveServiceReq) returns (sliverpb.ServiceInfo);
    rpc MakeToken(sliverpb.MakeTokenReq) returns (sliverpb.MakeToken);
    rpc GetEnv(sliverpb.EnvReq) returns (sliverpb.EnvInfo);
    rpc SetEnv(sliverpb.SetEnvReq) returns (sliverpb.SetEnv);
    rpc UnsetEnv(sliverpb.UnsetEnvReq) returns (sliverpb.UnsetEnv);
    rpc Backdoor(sliverpb.BackdoorReq) returns (sliverpb.Backdoor);
    rpc RegistryRead(sliverpb.RegistryReadReq) returns (sliverpb.RegistryRead);
    rpc RegistryWrite(sliverpb.RegistryWriteReq) returns (sliverpb.RegistryWrite);
    rpc RegistryCreateKey(sliverpb.RegistryCreateKeyReq) returns (sliverpb.RegistryCreateKey);
    rpc RegistryDeleteKey(sliverpb.RegistryDeleteKeyReq) returns (sliverpb.RegistryDeleteKey);
    rpc RegistryListSubKeys(sliverpb.RegistrySubKeyListReq) returns (sliverpb.RegistrySubKeyList);
    rpc RegistryListValues(sliverpb.RegistryListValuesReq) returns (sliverpb.RegistryValuesList);
    rpc RunSSHCommand(sliverpb.SSHCommandReq) returns (sliverpb.SSHCommand);
    rpc HijackDLL(clientpb.DllHijackReq) returns (clientpb.DllHijack);
    rpc GetPrivs(sliverpb.GetPrivsReq) returns (sliverpb.GetPrivs);

    // Beacon only commands
    rpc OpenSession(sliverpb.OpenSession) returns (sliverpb.OpenSession);
    rpc CloseSession(sliverpb.CloseSession) returns (commonpb.Empty);
    
    // Extensions
    rpc RegisterExtension(sliverpb.RegisterExtensionReq) returns (sliverpb.RegisterExtension);
    rpc CallExtension(sliverpb.CallExtensionReq) returns (sliverpb.CallExtension);
    rpc ListExtensions(sliverpb.ListExtensionsReq) returns (sliverpb.ListExtensions);
    
    // *** Wireguard Specific ***
    rpc WGStartPortForward(sliverpb.WGPortForwardStartReq) returns (sliverpb.WGPortForward);
    rpc WGStopPortForward(sliverpb.WGPortForwardStopReq) returns (sliverpb.WGPortForward);
    rpc WGStartSocks(sliverpb.WGSocksStartReq) returns (sliverpb.WGSocks);
    rpc WGStopSocks(sliverpb.WGSocksStopReq) returns (sliverpb.WGSocks);
    rpc WGListForwarders(sliverpb.WGTCPForwardersReq) returns (sliverpb.WGTCPForwarders);
    rpc WGListSocksServers(sliverpb.WGSocksServersReq) returns (sliverpb.WGSocksServers);

    // *** Realtime Commands ***
    rpc Shell(sliverpb.ShellReq) returns (sliverpb.Shell);
    rpc Portfwd(sliverpb.PortfwdReq) returns (sliverpb.Portfwd);

    // *** Socks5 ***
    rpc CreateSocks(sliverpb.Socks) returns (sliverpb.Socks);
    rpc CloseSocks(sliverpb.Socks) returns (commonpb.Empty);
    rpc SocksProxy(stream sliverpb.SocksData) returns (stream sliverpb.SocksData);

    // *** Tunnels ***
    rpc CreateTunnel(sliverpb.Tunnel) returns (sliverpb.Tunnel);
    rpc CloseTunnel(sliverpb.Tunnel) returns (commonpb.Empty);
    rpc TunnelData(stream sliverpb.TunnelData) returns (stream sliverpb.TunnelData);

    // *** Events ***
    rpc Events(commonpb.Empty) returns (stream clientpb.Event);
}
