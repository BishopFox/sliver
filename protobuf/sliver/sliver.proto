syntax = "proto3";

package sliverpb;

message Envelope {
  uint32 Type = 1; // Message type
  uint64 ID = 2;   // Resp ID
  bytes Data = 9;  // Actual message data
  
  string Err = 4;
}

message Register {
  string Name = 1;
  string Hostname = 2;
  string Username = 3;
  string Uid = 4;
  string Gid = 5;
  string Os = 6;
  string Arch = 7;
  int32 Pid = 8;
  string Filename = 9;
}

message Ping {
  int32 Nonce = 1;
}

message KillReq {
  uint32 SliverID = 9;
}

// aka Shellcode
message Task {
  string Encoder = 2;
  bytes Data = 9;
}

message RemoteTask {
  string Encoder = 2;
  int32 Pid = 3;
  bytes Data = 9;
}

message PsReq {
  uint32 SliverID = 9;
}

message Ps {
  repeated Process Processes = 1;
}

message Process {
  int32 Pid = 1;
  int32 Ppid = 2;
  string Executable = 3;
  string Owner = 4;
}


message LsReq {
  string Path = 1;

  uint32 SliverID = 9;
}

message Ls {
  string Path = 1;
  bool Exists = 2; 
  repeated FileInfo Files = 3;
}

message FileInfo {
  string Name = 1;
  bool IsDir = 2;
  int64 Size = 3;
}

message PwdReq {
  uint32 SliverID = 9;
}

message CdReq {
  string Path = 1;
  uint32 SliverID = 9;
}

message Pwd {
  string Path = 1;
  string Err = 2;
}

message RmReq {
  string Path = 1;

  uint32 SliverID = 9;
}

message Rm {
  bool Success = 1;
  string Path = 2;
  string Err = 3;
}

message MkdirReq {
  string Path = 1;

  uint32 SliverID = 9;
}

message Mkdir {
  bool Success = 1;
  string Path = 2;
  string Err = 3;
}

message DownloadReq {
  string Path = 1;

  uint32 SliverID = 9;
}

message Download {
  string Path = 1;
  string Encoder = 2;
  bool Exists = 3;

  bytes Data = 9;
}

message UploadReq {
  string Path = 1;
  string Encoder = 2;
  bytes Data = 3;

  uint32 SliverID = 9;
}

message Upload {
  string Path = 1;
  string Err = 2;
  bool Success = 3;
}

message ProcessDumpReq {
  int32 Pid = 1;

  int32 Timeout = 8;
  uint32 SliverID = 9;
}

message ProcessDump {
  bytes Data = 1;
  string Err = 2;
}

message ImpersonateReq {
  string Username = 1;
  string Process = 2;
  string Args = 3;
  uint32 SliverID = 9;
}

message Impersonate {
  string Output = 1;
}

message ElevateReq {
  int32 Timeout = 8;
  uint32 SliverID = 9;
}

message Elevate {
  bool Success = 1;
  string Err = 2;
}

message ExecuteAssemblyReq {
  bytes HostingDll = 1;
  bytes Assembly = 2;
  string Arguments = 3;
  int32 Timeout = 8;
  uint32 SliverID = 9;
}


message ExecuteAssembly {
  string output = 1;
  string error = 2;
}

// DNS Specific messages
message DNSSessionInit {
  bytes Key = 1;
}

message DNSPoll {
  repeated DNSBlockHeader blocks = 1;
}

message DNSBlockHeader {
  string ID = 1;
  uint32 Size = 2;
}

// HTTP Sepecific message
message HTTPSessionInit {
  bytes Key = 1;
}

// Tunnels, shells, and port fwds
message TunnelData {
  uint32 SliverID = 1;

  bytes Data = 2;
  bool Close = 3;
  string Err = 4;

  uint64 TunnelID = 9;
}

message TunnelClose {
  string Err = 1;
  uint64 TunnelID = 9;
}

// Shell messages
message ShellReq {
  uint32 SliverID = 1;
  string Path = 2;
  bool EnablePTY = 3;

  uint64 TunnelID = 9;
}

message Shell {
  bool Success = 1;
  string Err = 2;

  uint64 TunnelID = 9;
}
