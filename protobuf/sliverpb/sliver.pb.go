// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: sliverpb/sliver.proto

package sliverpb

import (
	commonpb "github.com/bishopfox/sliver/protobuf/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envelope - Used to encode implant<->server messages since we
//            cannot use gRPC due to the various transports used.
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                                 // Envelope ID used to track request/response
	Type               uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`                             // Message type
	Data               []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`                              // Actual message data
	UnknownMessageType bool   `protobuf:"varint,4,opt,name=UnknownMessageType,proto3" json:"UnknownMessageType,omitempty"` // Set if the implant did not understand the message
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Envelope) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Envelope) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Envelope) GetUnknownMessageType() bool {
	if x != nil {
		return x.UnknownMessageType
	}
	return false
}

// Register - First message the implant sends to the server
type Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Hostname          string `protobuf:"bytes,2,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Uuid              string `protobuf:"bytes,3,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	Username          string `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	Uid               string `protobuf:"bytes,5,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Gid               string `protobuf:"bytes,6,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Os                string `protobuf:"bytes,7,opt,name=Os,proto3" json:"Os,omitempty"`
	Arch              string `protobuf:"bytes,8,opt,name=Arch,proto3" json:"Arch,omitempty"`
	Pid               int32  `protobuf:"varint,9,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Filename          string `protobuf:"bytes,10,opt,name=Filename,proto3" json:"Filename,omitempty"`
	ActiveC2          string `protobuf:"bytes,11,opt,name=ActiveC2,proto3" json:"ActiveC2,omitempty"`
	Version           string `protobuf:"bytes,12,opt,name=Version,proto3" json:"Version,omitempty"`
	ReconnectInterval uint32 `protobuf:"varint,13,opt,name=ReconnectInterval,proto3" json:"ReconnectInterval,omitempty"`
	ProxyURL          string `protobuf:"bytes,14,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	PollInterval      uint32 `protobuf:"varint,15,opt,name=PollInterval,proto3" json:"PollInterval,omitempty"`
}

func (x *Register) Reset() {
	*x = Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{1}
}

func (x *Register) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Register) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Register) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Register) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Register) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Register) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Register) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Register) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Register) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Register) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Register) GetActiveC2() string {
	if x != nil {
		return x.ActiveC2
	}
	return ""
}

func (x *Register) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Register) GetReconnectInterval() uint32 {
	if x != nil {
		return x.ReconnectInterval
	}
	return 0
}

func (x *Register) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *Register) GetPollInterval() uint32 {
	if x != nil {
		return x.PollInterval
	}
	return 0
}

// Ping - Not ICMP, just sends a rount trip message to an implant to
//        see if it's still responding.
type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce int32 `protobuf:"varint,1,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	// Ping is special
	Response *commonpb.Response `protobuf:"bytes,8,opt,name=Response,proto3" json:"Response,omitempty"`
	Request  *commonpb.Request  `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{2}
}

func (x *Ping) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Ping) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Ping) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

// KillSessionReq - Request the implant to kill a session
type KillSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force   bool              `protobuf:"varint,1,opt,name=Force,proto3" json:"Force,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *KillSessionReq) Reset() {
	*x = KillSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillSessionReq) ProtoMessage() {}

func (x *KillSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillSessionReq.ProtoReflect.Descriptor instead.
func (*KillSessionReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{3}
}

func (x *KillSessionReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *KillSessionReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

// PsReq - Request the implant to list ses of a remote session.
type PsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PsReq) Reset() {
	*x = PsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsReq) ProtoMessage() {}

func (x *PsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsReq.ProtoReflect.Descriptor instead.
func (*PsReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{4}
}

func (x *PsReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Ps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processes []*commonpb.Process `protobuf:"bytes,1,rep,name=Processes,proto3" json:"Processes,omitempty"`
	Response  *commonpb.Response  `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Ps) Reset() {
	*x = Ps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ps) ProtoMessage() {}

func (x *Ps) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ps.ProtoReflect.Descriptor instead.
func (*Ps) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{5}
}

func (x *Ps) GetProcesses() []*commonpb.Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *Ps) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// TerminateReq - Request the implant terminate a remote processes
type TerminateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid     int32             `protobuf:"varint,1,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Force   bool              `protobuf:"varint,2,opt,name=Force,proto3" json:"Force,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TerminateReq) Reset() {
	*x = TerminateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateReq) ProtoMessage() {}

func (x *TerminateReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateReq.ProtoReflect.Descriptor instead.
func (*TerminateReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{6}
}

func (x *TerminateReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *TerminateReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *TerminateReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Terminate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid      int32              `protobuf:"varint,1,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Terminate) Reset() {
	*x = Terminate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terminate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terminate) ProtoMessage() {}

func (x *Terminate) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terminate.ProtoReflect.Descriptor instead.
func (*Terminate) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{7}
}

func (x *Terminate) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Terminate) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// IfconfigReq - Request the implant to list network interfaces
type IfconfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *IfconfigReq) Reset() {
	*x = IfconfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfconfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfconfigReq) ProtoMessage() {}

func (x *IfconfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfconfigReq.ProtoReflect.Descriptor instead.
func (*IfconfigReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{8}
}

func (x *IfconfigReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Ifconfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetInterfaces []*NetInterface    `protobuf:"bytes,1,rep,name=NetInterfaces,proto3" json:"NetInterfaces,omitempty"`
	Response      *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Ifconfig) Reset() {
	*x = Ifconfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ifconfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ifconfig) ProtoMessage() {}

func (x *Ifconfig) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ifconfig.ProtoReflect.Descriptor instead.
func (*Ifconfig) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{9}
}

func (x *Ifconfig) GetNetInterfaces() []*NetInterface {
	if x != nil {
		return x.NetInterfaces
	}
	return nil
}

func (x *Ifconfig) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type NetInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       int32    `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	MAC         string   `protobuf:"bytes,3,opt,name=MAC,proto3" json:"MAC,omitempty"`
	IPAddresses []string `protobuf:"bytes,4,rep,name=IPAddresses,proto3" json:"IPAddresses,omitempty"`
}

func (x *NetInterface) Reset() {
	*x = NetInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterface) ProtoMessage() {}

func (x *NetInterface) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterface.ProtoReflect.Descriptor instead.
func (*NetInterface) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{10}
}

func (x *NetInterface) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NetInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetInterface) GetMAC() string {
	if x != nil {
		return x.MAC
	}
	return ""
}

func (x *NetInterface) GetIPAddresses() []string {
	if x != nil {
		return x.IPAddresses
	}
	return nil
}

type LsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *LsReq) Reset() {
	*x = LsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsReq) ProtoMessage() {}

func (x *LsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsReq.ProtoReflect.Descriptor instead.
func (*LsReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{11}
}

func (x *LsReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LsReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Ls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Exists   bool               `protobuf:"varint,2,opt,name=Exists,proto3" json:"Exists,omitempty"`
	Files    []*FileInfo        `protobuf:"bytes,3,rep,name=Files,proto3" json:"Files,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Ls) Reset() {
	*x = Ls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ls) ProtoMessage() {}

func (x *Ls) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ls.ProtoReflect.Descriptor instead.
func (*Ls) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{12}
}

func (x *Ls) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ls) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *Ls) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Ls) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	IsDir bool   `protobuf:"varint,2,opt,name=IsDir,proto3" json:"IsDir,omitempty"`
	Size  int64  `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{13}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *CdReq) Reset() {
	*x = CdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdReq) ProtoMessage() {}

func (x *CdReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdReq.ProtoReflect.Descriptor instead.
func (*CdReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{14}
}

func (x *CdReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CdReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type PwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PwdReq) Reset() {
	*x = PwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwdReq) ProtoMessage() {}

func (x *PwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwdReq.ProtoReflect.Descriptor instead.
func (*PwdReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{15}
}

func (x *PwdReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Pwd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Pwd) Reset() {
	*x = Pwd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pwd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pwd) ProtoMessage() {}

func (x *Pwd) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pwd.ProtoReflect.Descriptor instead.
func (*Pwd) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{16}
}

func (x *Pwd) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Pwd) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Recursive bool              `protobuf:"varint,2,opt,name=Recursive,proto3" json:"Recursive,omitempty"`
	Force     bool              `protobuf:"varint,3,opt,name=Force,proto3" json:"Force,omitempty"`
	Request   *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RmReq) Reset() {
	*x = RmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmReq) ProtoMessage() {}

func (x *RmReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmReq.ProtoReflect.Descriptor instead.
func (*RmReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{17}
}

func (x *RmReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RmReq) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *RmReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *RmReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Rm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Rm) Reset() {
	*x = Rm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rm) ProtoMessage() {}

func (x *Rm) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rm.ProtoReflect.Descriptor instead.
func (*Rm) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{18}
}

func (x *Rm) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Rm) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type MkdirReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *MkdirReq) Reset() {
	*x = MkdirReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MkdirReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MkdirReq) ProtoMessage() {}

func (x *MkdirReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MkdirReq.ProtoReflect.Descriptor instead.
func (*MkdirReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{19}
}

func (x *MkdirReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MkdirReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Mkdir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Mkdir) Reset() {
	*x = Mkdir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mkdir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mkdir) ProtoMessage() {}

func (x *Mkdir) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mkdir.ProtoReflect.Descriptor instead.
func (*Mkdir) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{20}
}

func (x *Mkdir) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Mkdir) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type DownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *DownloadReq) Reset() {
	*x = DownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadReq) ProtoMessage() {}

func (x *DownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadReq.ProtoReflect.Descriptor instead.
func (*DownloadReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{21}
}

func (x *DownloadReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DownloadReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Download struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Encoder  string             `protobuf:"bytes,2,opt,name=Encoder,proto3" json:"Encoder,omitempty"`
	Exists   bool               `protobuf:"varint,3,opt,name=Exists,proto3" json:"Exists,omitempty"`
	Data     []byte             `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Download) Reset() {
	*x = Download{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Download) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Download) ProtoMessage() {}

func (x *Download) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Download.ProtoReflect.Descriptor instead.
func (*Download) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{22}
}

func (x *Download) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Download) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *Download) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *Download) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Download) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type UploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Encoder string            `protobuf:"bytes,2,opt,name=Encoder,proto3" json:"Encoder,omitempty"`
	Data    []byte            `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *UploadReq) Reset() {
	*x = UploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReq) ProtoMessage() {}

func (x *UploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReq.ProtoReflect.Descriptor instead.
func (*UploadReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{23}
}

func (x *UploadReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UploadReq) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *UploadReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Upload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Upload) Reset() {
	*x = Upload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Upload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upload) ProtoMessage() {}

func (x *Upload) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upload.ProtoReflect.Descriptor instead.
func (*Upload) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{24}
}

func (x *Upload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Upload) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ProcessDumpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid     int32             `protobuf:"varint,1,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Timeout int32             `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ProcessDumpReq) Reset() {
	*x = ProcessDumpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessDumpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDumpReq) ProtoMessage() {}

func (x *ProcessDumpReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDumpReq.ProtoReflect.Descriptor instead.
func (*ProcessDumpReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{25}
}

func (x *ProcessDumpReq) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessDumpReq) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ProcessDumpReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ProcessDump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte             `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ProcessDump) Reset() {
	*x = ProcessDump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessDump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDump) ProtoMessage() {}

func (x *ProcessDump) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDump.ProtoReflect.Descriptor instead.
func (*ProcessDump) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{26}
}

func (x *ProcessDump) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProcessDump) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RunAsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string            `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	ProcessName string            `protobuf:"bytes,2,opt,name=ProcessName,proto3" json:"ProcessName,omitempty"`
	Args        string            `protobuf:"bytes,3,opt,name=Args,proto3" json:"Args,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RunAsReq) Reset() {
	*x = RunAsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAsReq) ProtoMessage() {}

func (x *RunAsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAsReq.ProtoReflect.Descriptor instead.
func (*RunAsReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{27}
}

func (x *RunAsReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RunAsReq) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *RunAsReq) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *RunAsReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RunAs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output   string             `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RunAs) Reset() {
	*x = RunAs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunAs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAs) ProtoMessage() {}

func (x *RunAs) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAs.ProtoReflect.Descriptor instead.
func (*RunAs) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{28}
}

func (x *RunAs) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *RunAs) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ImpersonateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string            `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ImpersonateReq) Reset() {
	*x = ImpersonateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpersonateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpersonateReq) ProtoMessage() {}

func (x *ImpersonateReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpersonateReq.ProtoReflect.Descriptor instead.
func (*ImpersonateReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{29}
}

func (x *ImpersonateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ImpersonateReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Impersonate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Impersonate) Reset() {
	*x = Impersonate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Impersonate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Impersonate) ProtoMessage() {}

func (x *Impersonate) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Impersonate.ProtoReflect.Descriptor instead.
func (*Impersonate) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{30}
}

func (x *Impersonate) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RevToSelfReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RevToSelfReq) Reset() {
	*x = RevToSelfReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevToSelfReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevToSelfReq) ProtoMessage() {}

func (x *RevToSelfReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevToSelfReq.ProtoReflect.Descriptor instead.
func (*RevToSelfReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{31}
}

func (x *RevToSelfReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RevToSelf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RevToSelf) Reset() {
	*x = RevToSelf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevToSelf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevToSelf) ProtoMessage() {}

func (x *RevToSelf) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevToSelf.ProtoReflect.Descriptor instead.
func (*RevToSelf) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{32}
}

func (x *RevToSelf) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// InvokeGetSystemReq - Implant-side version of GetSystemReq, this message
//                      contains the .Data based on the client's req.Config
type InvokeGetSystemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data           []byte            `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	HostingProcess string            `protobuf:"bytes,2,opt,name=HostingProcess,proto3" json:"HostingProcess,omitempty"`
	Request        *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *InvokeGetSystemReq) Reset() {
	*x = InvokeGetSystemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeGetSystemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeGetSystemReq) ProtoMessage() {}

func (x *InvokeGetSystemReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeGetSystemReq.ProtoReflect.Descriptor instead.
func (*InvokeGetSystemReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{33}
}

func (x *InvokeGetSystemReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvokeGetSystemReq) GetHostingProcess() string {
	if x != nil {
		return x.HostingProcess
	}
	return ""
}

func (x *InvokeGetSystemReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

// GetSystem - The result of a InvokeGetSystemReq attempt
type GetSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *GetSystem) Reset() {
	*x = GetSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystem) ProtoMessage() {}

func (x *GetSystem) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystem.ProtoReflect.Descriptor instead.
func (*GetSystem) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{34}
}

func (x *GetSystem) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type MakeTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string            `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string            `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Domain   string            `protobuf:"bytes,3,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *MakeTokenReq) Reset() {
	*x = MakeTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeTokenReq) ProtoMessage() {}

func (x *MakeTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeTokenReq.ProtoReflect.Descriptor instead.
func (*MakeTokenReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{35}
}

func (x *MakeTokenReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MakeTokenReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MakeTokenReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *MakeTokenReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type MakeToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *MakeToken) Reset() {
	*x = MakeToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeToken) ProtoMessage() {}

func (x *MakeToken) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeToken.ProtoReflect.Descriptor instead.
func (*MakeToken) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{36}
}

func (x *MakeToken) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoder  string            `protobuf:"bytes,1,opt,name=Encoder,proto3" json:"Encoder,omitempty"`
	RWXPages bool              `protobuf:"varint,2,opt,name=RWXPages,proto3" json:"RWXPages,omitempty"`
	Pid      uint32            `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Data     []byte            `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TaskReq) Reset() {
	*x = TaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReq) ProtoMessage() {}

func (x *TaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReq.ProtoReflect.Descriptor instead.
func (*TaskReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{37}
}

func (x *TaskReq) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *TaskReq) GetRWXPages() bool {
	if x != nil {
		return x.RWXPages
	}
	return false
}

func (x *TaskReq) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *TaskReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{38}
}

func (x *Task) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ExecuteAssemblyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assembly  []byte            `protobuf:"bytes,1,opt,name=Assembly,proto3" json:"Assembly,omitempty"`
	Arguments string            `protobuf:"bytes,2,opt,name=Arguments,proto3" json:"Arguments,omitempty"`
	Process   string            `protobuf:"bytes,3,opt,name=Process,proto3" json:"Process,omitempty"`
	IsDLL     bool              `protobuf:"varint,4,opt,name=IsDLL,proto3" json:"IsDLL,omitempty"`
	Arch      string            `protobuf:"bytes,5,opt,name=Arch,proto3" json:"Arch,omitempty"`
	ClassName string            `protobuf:"bytes,6,opt,name=ClassName,proto3" json:"ClassName,omitempty"`
	Method    string            `protobuf:"bytes,7,opt,name=Method,proto3" json:"Method,omitempty"`
	AppDomain string            `protobuf:"bytes,8,opt,name=AppDomain,proto3" json:"AppDomain,omitempty"`
	Request   *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ExecuteAssemblyReq) Reset() {
	*x = ExecuteAssemblyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteAssemblyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAssemblyReq) ProtoMessage() {}

func (x *ExecuteAssemblyReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAssemblyReq.ProtoReflect.Descriptor instead.
func (*ExecuteAssemblyReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{39}
}

func (x *ExecuteAssemblyReq) GetAssembly() []byte {
	if x != nil {
		return x.Assembly
	}
	return nil
}

func (x *ExecuteAssemblyReq) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetIsDLL() bool {
	if x != nil {
		return x.IsDLL
	}
	return false
}

func (x *ExecuteAssemblyReq) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetAppDomain() string {
	if x != nil {
		return x.AppDomain
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type InvokeExecuteAssemblyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []byte            `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Process string            `protobuf:"bytes,2,opt,name=process,proto3" json:"process,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *InvokeExecuteAssemblyReq) Reset() {
	*x = InvokeExecuteAssemblyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeExecuteAssemblyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeExecuteAssemblyReq) ProtoMessage() {}

func (x *InvokeExecuteAssemblyReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeExecuteAssemblyReq.ProtoReflect.Descriptor instead.
func (*InvokeExecuteAssemblyReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{40}
}

func (x *InvokeExecuteAssemblyReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvokeExecuteAssemblyReq) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *InvokeExecuteAssemblyReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ExecuteAssembly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output   []byte             `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ExecuteAssembly) Reset() {
	*x = ExecuteAssembly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteAssembly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAssembly) ProtoMessage() {}

func (x *ExecuteAssembly) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAssembly.ProtoReflect.Descriptor instead.
func (*ExecuteAssembly) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{41}
}

func (x *ExecuteAssembly) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ExecuteAssembly) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type InvokeMigrateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid     uint32            `protobuf:"varint,1,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Data    []byte            `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *InvokeMigrateReq) Reset() {
	*x = InvokeMigrateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeMigrateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeMigrateReq) ProtoMessage() {}

func (x *InvokeMigrateReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeMigrateReq.ProtoReflect.Descriptor instead.
func (*InvokeMigrateReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{42}
}

func (x *InvokeMigrateReq) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *InvokeMigrateReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvokeMigrateReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Migrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Migrate) Reset() {
	*x = Migrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Migrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Migrate) ProtoMessage() {}

func (x *Migrate) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Migrate.ProtoReflect.Descriptor instead.
func (*Migrate) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{43}
}

func (x *Migrate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Migrate) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ExecuteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Args    []string          `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
	Output  bool              `protobuf:"varint,3,opt,name=Output,proto3" json:"Output,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ExecuteReq) Reset() {
	*x = ExecuteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteReq) ProtoMessage() {}

func (x *ExecuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteReq.ProtoReflect.Descriptor instead.
func (*ExecuteReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{44}
}

func (x *ExecuteReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ExecuteReq) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecuteReq) GetOutput() bool {
	if x != nil {
		return x.Output
	}
	return false
}

func (x *ExecuteReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ExecuteTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Args    []string          `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
	Output  bool              `protobuf:"varint,3,opt,name=Output,proto3" json:"Output,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ExecuteTokenReq) Reset() {
	*x = ExecuteTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTokenReq) ProtoMessage() {}

func (x *ExecuteTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTokenReq.ProtoReflect.Descriptor instead.
func (*ExecuteTokenReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{45}
}

func (x *ExecuteTokenReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ExecuteTokenReq) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecuteTokenReq) GetOutput() bool {
	if x != nil {
		return x.Output
	}
	return false
}

func (x *ExecuteTokenReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Execute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   string             `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Status   uint32             `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Execute) Reset() {
	*x = Execute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execute) ProtoMessage() {}

func (x *Execute) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execute.ProtoReflect.Descriptor instead.
func (*Execute) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{46}
}

func (x *Execute) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Execute) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Execute) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type SideloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []byte            `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	ProcessName string            `protobuf:"bytes,2,opt,name=ProcessName,proto3" json:"ProcessName,omitempty"`
	Args        string            `protobuf:"bytes,3,opt,name=Args,proto3" json:"Args,omitempty"`
	EntryPoint  string            `protobuf:"bytes,4,opt,name=EntryPoint,proto3" json:"EntryPoint,omitempty"`
	Kill        bool              `protobuf:"varint,5,opt,name=Kill,proto3" json:"Kill,omitempty"`
	IsDLL       bool              `protobuf:"varint,6,opt,name=isDLL,proto3" json:"isDLL,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *SideloadReq) Reset() {
	*x = SideloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideloadReq) ProtoMessage() {}

func (x *SideloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideloadReq.ProtoReflect.Descriptor instead.
func (*SideloadReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{47}
}

func (x *SideloadReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SideloadReq) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *SideloadReq) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *SideloadReq) GetEntryPoint() string {
	if x != nil {
		return x.EntryPoint
	}
	return ""
}

func (x *SideloadReq) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

func (x *SideloadReq) GetIsDLL() bool {
	if x != nil {
		return x.IsDLL
	}
	return false
}

func (x *SideloadReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Sideload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   string             `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Sideload) Reset() {
	*x = Sideload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sideload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sideload) ProtoMessage() {}

func (x *Sideload) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sideload.ProtoReflect.Descriptor instead.
func (*Sideload) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{48}
}

func (x *Sideload) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Sideload) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type InvokeSpawnDllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []byte            `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	ProcessName string            `protobuf:"bytes,2,opt,name=ProcessName,proto3" json:"ProcessName,omitempty"`
	Args        string            `protobuf:"bytes,3,opt,name=Args,proto3" json:"Args,omitempty"`
	EntryPoint  string            `protobuf:"bytes,4,opt,name=EntryPoint,proto3" json:"EntryPoint,omitempty"`
	Kill        bool              `protobuf:"varint,5,opt,name=Kill,proto3" json:"Kill,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *InvokeSpawnDllReq) Reset() {
	*x = InvokeSpawnDllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeSpawnDllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeSpawnDllReq) ProtoMessage() {}

func (x *InvokeSpawnDllReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeSpawnDllReq.ProtoReflect.Descriptor instead.
func (*InvokeSpawnDllReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{49}
}

func (x *InvokeSpawnDllReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InvokeSpawnDllReq) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *InvokeSpawnDllReq) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *InvokeSpawnDllReq) GetEntryPoint() string {
	if x != nil {
		return x.EntryPoint
	}
	return ""
}

func (x *InvokeSpawnDllReq) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

func (x *InvokeSpawnDllReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SpawnDllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []byte            `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	ProcessName string            `protobuf:"bytes,2,opt,name=ProcessName,proto3" json:"ProcessName,omitempty"`
	Offset      uint32            `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Args        string            `protobuf:"bytes,4,opt,name=Args,proto3" json:"Args,omitempty"`
	Kill        bool              `protobuf:"varint,5,opt,name=Kill,proto3" json:"Kill,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *SpawnDllReq) Reset() {
	*x = SpawnDllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnDllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnDllReq) ProtoMessage() {}

func (x *SpawnDllReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnDllReq.ProtoReflect.Descriptor instead.
func (*SpawnDllReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{50}
}

func (x *SpawnDllReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SpawnDllReq) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *SpawnDllReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SpawnDllReq) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *SpawnDllReq) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

func (x *SpawnDllReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SpawnDll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   string             `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *SpawnDll) Reset() {
	*x = SpawnDll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnDll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnDll) ProtoMessage() {}

func (x *SpawnDll) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnDll.ProtoReflect.Descriptor instead.
func (*SpawnDll) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{51}
}

func (x *SpawnDll) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *SpawnDll) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type NetstatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TCP       bool              `protobuf:"varint,1,opt,name=TCP,proto3" json:"TCP,omitempty"`
	UDP       bool              `protobuf:"varint,2,opt,name=UDP,proto3" json:"UDP,omitempty"`
	IP4       bool              `protobuf:"varint,3,opt,name=IP4,proto3" json:"IP4,omitempty"`
	IP6       bool              `protobuf:"varint,5,opt,name=IP6,proto3" json:"IP6,omitempty"`
	Listening bool              `protobuf:"varint,6,opt,name=Listening,proto3" json:"Listening,omitempty"`
	Request   *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *NetstatReq) Reset() {
	*x = NetstatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetstatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetstatReq) ProtoMessage() {}

func (x *NetstatReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetstatReq.ProtoReflect.Descriptor instead.
func (*NetstatReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{52}
}

func (x *NetstatReq) GetTCP() bool {
	if x != nil {
		return x.TCP
	}
	return false
}

func (x *NetstatReq) GetUDP() bool {
	if x != nil {
		return x.UDP
	}
	return false
}

func (x *NetstatReq) GetIP4() bool {
	if x != nil {
		return x.IP4
	}
	return false
}

func (x *NetstatReq) GetIP6() bool {
	if x != nil {
		return x.IP6
	}
	return false
}

func (x *NetstatReq) GetListening() bool {
	if x != nil {
		return x.Listening
	}
	return false
}

func (x *NetstatReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SockTabEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalAddr  *SockTabEntry_SockAddr `protobuf:"bytes,1,opt,name=LocalAddr,proto3" json:"LocalAddr,omitempty"`
	RemoteAddr *SockTabEntry_SockAddr `protobuf:"bytes,2,opt,name=RemoteAddr,proto3" json:"RemoteAddr,omitempty"`
	SkState    string                 `protobuf:"bytes,3,opt,name=SkState,proto3" json:"SkState,omitempty"`
	UID        uint32                 `protobuf:"varint,4,opt,name=UID,proto3" json:"UID,omitempty"`
	Process    *commonpb.Process      `protobuf:"bytes,5,opt,name=Process,proto3" json:"Process,omitempty"`
	Protocol   string                 `protobuf:"bytes,6,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
}

func (x *SockTabEntry) Reset() {
	*x = SockTabEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SockTabEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SockTabEntry) ProtoMessage() {}

func (x *SockTabEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SockTabEntry.ProtoReflect.Descriptor instead.
func (*SockTabEntry) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{53}
}

func (x *SockTabEntry) GetLocalAddr() *SockTabEntry_SockAddr {
	if x != nil {
		return x.LocalAddr
	}
	return nil
}

func (x *SockTabEntry) GetRemoteAddr() *SockTabEntry_SockAddr {
	if x != nil {
		return x.RemoteAddr
	}
	return nil
}

func (x *SockTabEntry) GetSkState() string {
	if x != nil {
		return x.SkState
	}
	return ""
}

func (x *SockTabEntry) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *SockTabEntry) GetProcess() *commonpb.Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *SockTabEntry) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type Netstat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries  []*SockTabEntry    `protobuf:"bytes,1,rep,name=Entries,proto3" json:"Entries,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Netstat) Reset() {
	*x = Netstat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Netstat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Netstat) ProtoMessage() {}

func (x *Netstat) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Netstat.ProtoReflect.Descriptor instead.
func (*Netstat) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{54}
}

func (x *Netstat) GetEntries() []*SockTabEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Netstat) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type EnvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *EnvReq) Reset() {
	*x = EnvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvReq) ProtoMessage() {}

func (x *EnvReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvReq.ProtoReflect.Descriptor instead.
func (*EnvReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{55}
}

func (x *EnvReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type EnvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variables []*commonpb.EnvVar `protobuf:"bytes,1,rep,name=Variables,proto3" json:"Variables,omitempty"`
	Response  *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *EnvInfo) Reset() {
	*x = EnvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvInfo) ProtoMessage() {}

func (x *EnvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvInfo.ProtoReflect.Descriptor instead.
func (*EnvInfo) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{56}
}

func (x *EnvInfo) GetVariables() []*commonpb.EnvVar {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *EnvInfo) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type SetEnvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variable *commonpb.EnvVar  `protobuf:"bytes,1,opt,name=Variable,proto3" json:"Variable,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *SetEnvReq) Reset() {
	*x = SetEnvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnvReq) ProtoMessage() {}

func (x *SetEnvReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnvReq.ProtoReflect.Descriptor instead.
func (*SetEnvReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{57}
}

func (x *SetEnvReq) GetVariable() *commonpb.EnvVar {
	if x != nil {
		return x.Variable
	}
	return nil
}

func (x *SetEnvReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SetEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *SetEnv) Reset() {
	*x = SetEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnv) ProtoMessage() {}

func (x *SetEnv) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEnv.ProtoReflect.Descriptor instead.
func (*SetEnv) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{58}
}

func (x *SetEnv) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type UnsetEnvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *UnsetEnvReq) Reset() {
	*x = UnsetEnvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetEnvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetEnvReq) ProtoMessage() {}

func (x *UnsetEnvReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetEnvReq.ProtoReflect.Descriptor instead.
func (*UnsetEnvReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{59}
}

func (x *UnsetEnvReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnsetEnvReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type UnsetEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *UnsetEnv) Reset() {
	*x = UnsetEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetEnv) ProtoMessage() {}

func (x *UnsetEnv) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetEnv.ProtoReflect.Descriptor instead.
func (*UnsetEnv) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{60}
}

func (x *UnsetEnv) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// DNS Specific messages
type DNSSessionInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *DNSSessionInit) Reset() {
	*x = DNSSessionInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSSessionInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSSessionInit) ProtoMessage() {}

func (x *DNSSessionInit) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSSessionInit.ProtoReflect.Descriptor instead.
func (*DNSSessionInit) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{61}
}

func (x *DNSSessionInit) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DNSPoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*DNSBlockHeader `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *DNSPoll) Reset() {
	*x = DNSPoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSPoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSPoll) ProtoMessage() {}

func (x *DNSPoll) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSPoll.ProtoReflect.Descriptor instead.
func (*DNSPoll) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{62}
}

func (x *DNSPoll) GetBlocks() []*DNSBlockHeader {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type DNSBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *DNSBlockHeader) Reset() {
	*x = DNSBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSBlockHeader) ProtoMessage() {}

func (x *DNSBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSBlockHeader.ProtoReflect.Descriptor instead.
func (*DNSBlockHeader) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{63}
}

func (x *DNSBlockHeader) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DNSBlockHeader) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// HTTP Sepecific message
type HTTPSessionInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *HTTPSessionInit) Reset() {
	*x = HTTPSessionInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPSessionInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPSessionInit) ProtoMessage() {}

func (x *HTTPSessionInit) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPSessionInit.ProtoReflect.Descriptor instead.
func (*HTTPSessionInit) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{64}
}

func (x *HTTPSessionInit) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// ScreenshotReq - Request the implant take a screenshot
type ScreenshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ScreenshotReq) Reset() {
	*x = ScreenshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenshotReq) ProtoMessage() {}

func (x *ScreenshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenshotReq.ProtoReflect.Descriptor instead.
func (*ScreenshotReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{65}
}

func (x *ScreenshotReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Screenshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte             `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Screenshot) Reset() {
	*x = Screenshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screenshot) ProtoMessage() {}

func (x *Screenshot) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screenshot.ProtoReflect.Descriptor instead.
func (*Screenshot) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{66}
}

func (x *Screenshot) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Screenshot) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type StartServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName        string            `protobuf:"bytes,1,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	ServiceDescription string            `protobuf:"bytes,2,opt,name=ServiceDescription,proto3" json:"ServiceDescription,omitempty"`
	BinPath            string            `protobuf:"bytes,3,opt,name=BinPath,proto3" json:"BinPath,omitempty"`
	Hostname           string            `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Arguments          string            `protobuf:"bytes,5,opt,name=Arguments,proto3" json:"Arguments,omitempty"`
	Request            *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *StartServiceReq) Reset() {
	*x = StartServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServiceReq) ProtoMessage() {}

func (x *StartServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServiceReq.ProtoReflect.Descriptor instead.
func (*StartServiceReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{67}
}

func (x *StartServiceReq) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StartServiceReq) GetServiceDescription() string {
	if x != nil {
		return x.ServiceDescription
	}
	return ""
}

func (x *StartServiceReq) GetBinPath() string {
	if x != nil {
		return x.BinPath
	}
	return ""
}

func (x *StartServiceReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StartServiceReq) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *StartServiceReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{68}
}

func (x *ServiceInfo) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ServiceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	Hostname    string `protobuf:"bytes,2,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
}

func (x *ServiceInfoReq) Reset() {
	*x = ServiceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfoReq) ProtoMessage() {}

func (x *ServiceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfoReq.ProtoReflect.Descriptor instead.
func (*ServiceInfoReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{69}
}

func (x *ServiceInfoReq) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceInfoReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type StopServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfoReq   `protobuf:"bytes,1,opt,name=ServiceInfo,proto3" json:"ServiceInfo,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *StopServiceReq) Reset() {
	*x = StopServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServiceReq) ProtoMessage() {}

func (x *StopServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServiceReq.ProtoReflect.Descriptor instead.
func (*StopServiceReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{70}
}

func (x *StopServiceReq) GetServiceInfo() *ServiceInfoReq {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

func (x *StopServiceReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RemoveServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfoReq   `protobuf:"bytes,1,opt,name=ServiceInfo,proto3" json:"ServiceInfo,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RemoveServiceReq) Reset() {
	*x = RemoveServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceReq) ProtoMessage() {}

func (x *RemoveServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceReq.ProtoReflect.Descriptor instead.
func (*RemoveServiceReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{71}
}

func (x *RemoveServiceReq) GetServiceInfo() *ServiceInfoReq {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

func (x *RemoveServiceReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type BackdoorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath    string            `protobuf:"bytes,1,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	ProfileName string            `protobuf:"bytes,2,opt,name=ProfileName,proto3" json:"ProfileName,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *BackdoorReq) Reset() {
	*x = BackdoorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackdoorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackdoorReq) ProtoMessage() {}

func (x *BackdoorReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackdoorReq.ProtoReflect.Descriptor instead.
func (*BackdoorReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{72}
}

func (x *BackdoorReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *BackdoorReq) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *BackdoorReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Backdoor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Backdoor) Reset() {
	*x = Backdoor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backdoor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backdoor) ProtoMessage() {}

func (x *Backdoor) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backdoor.ProtoReflect.Descriptor instead.
func (*Backdoor) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{73}
}

func (x *Backdoor) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegistryReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive     string            `protobuf:"bytes,1,opt,name=Hive,proto3" json:"Hive,omitempty"`
	Path     string            `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Key      string            `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Hostname string            `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RegistryReadReq) Reset() {
	*x = RegistryReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryReadReq) ProtoMessage() {}

func (x *RegistryReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryReadReq.ProtoReflect.Descriptor instead.
func (*RegistryReadReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{74}
}

func (x *RegistryReadReq) GetHive() string {
	if x != nil {
		return x.Hive
	}
	return ""
}

func (x *RegistryReadReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegistryReadReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RegistryReadReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegistryReadReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RegistryRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string             `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RegistryRead) Reset() {
	*x = RegistryRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryRead) ProtoMessage() {}

func (x *RegistryRead) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryRead.ProtoReflect.Descriptor instead.
func (*RegistryRead) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{75}
}

func (x *RegistryRead) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RegistryRead) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegistryWriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive        string            `protobuf:"bytes,1,opt,name=Hive,proto3" json:"Hive,omitempty"`
	Path        string            `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Key         string            `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Hostname    string            `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	StringValue string            `protobuf:"bytes,5,opt,name=StringValue,proto3" json:"StringValue,omitempty"`
	ByteValue   []byte            `protobuf:"bytes,6,opt,name=ByteValue,proto3" json:"ByteValue,omitempty"`
	DWordValue  uint32            `protobuf:"varint,7,opt,name=DWordValue,proto3" json:"DWordValue,omitempty"`
	QWordValue  uint64            `protobuf:"varint,8,opt,name=QWordValue,proto3" json:"QWordValue,omitempty"`
	Type        uint32            `protobuf:"varint,10,opt,name=Type,proto3" json:"Type,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RegistryWriteReq) Reset() {
	*x = RegistryWriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryWriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryWriteReq) ProtoMessage() {}

func (x *RegistryWriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryWriteReq.ProtoReflect.Descriptor instead.
func (*RegistryWriteReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{76}
}

func (x *RegistryWriteReq) GetHive() string {
	if x != nil {
		return x.Hive
	}
	return ""
}

func (x *RegistryWriteReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegistryWriteReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RegistryWriteReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegistryWriteReq) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *RegistryWriteReq) GetByteValue() []byte {
	if x != nil {
		return x.ByteValue
	}
	return nil
}

func (x *RegistryWriteReq) GetDWordValue() uint32 {
	if x != nil {
		return x.DWordValue
	}
	return 0
}

func (x *RegistryWriteReq) GetQWordValue() uint64 {
	if x != nil {
		return x.QWordValue
	}
	return 0
}

func (x *RegistryWriteReq) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RegistryWriteReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RegistryWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RegistryWrite) Reset() {
	*x = RegistryWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryWrite) ProtoMessage() {}

func (x *RegistryWrite) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryWrite.ProtoReflect.Descriptor instead.
func (*RegistryWrite) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{77}
}

func (x *RegistryWrite) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegistryCreateKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive     string            `protobuf:"bytes,1,opt,name=Hive,proto3" json:"Hive,omitempty"`
	Path     string            `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Key      string            `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Hostname string            `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RegistryCreateKeyReq) Reset() {
	*x = RegistryCreateKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryCreateKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryCreateKeyReq) ProtoMessage() {}

func (x *RegistryCreateKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryCreateKeyReq.ProtoReflect.Descriptor instead.
func (*RegistryCreateKeyReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{78}
}

func (x *RegistryCreateKeyReq) GetHive() string {
	if x != nil {
		return x.Hive
	}
	return ""
}

func (x *RegistryCreateKeyReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegistryCreateKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RegistryCreateKeyReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegistryCreateKeyReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RegistryCreateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RegistryCreateKey) Reset() {
	*x = RegistryCreateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryCreateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryCreateKey) ProtoMessage() {}

func (x *RegistryCreateKey) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryCreateKey.ProtoReflect.Descriptor instead.
func (*RegistryCreateKey) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{79}
}

func (x *RegistryCreateKey) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegistrySubKeyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive string `protobuf:"bytes,1,opt,name=Hive,proto3" json:"Hive,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	// Keep the same ID as the other registry operations
	Hostname string            `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RegistrySubKeyListReq) Reset() {
	*x = RegistrySubKeyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrySubKeyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrySubKeyListReq) ProtoMessage() {}

func (x *RegistrySubKeyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrySubKeyListReq.ProtoReflect.Descriptor instead.
func (*RegistrySubKeyListReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{80}
}

func (x *RegistrySubKeyListReq) GetHive() string {
	if x != nil {
		return x.Hive
	}
	return ""
}

func (x *RegistrySubKeyListReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegistrySubKeyListReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegistrySubKeyListReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RegistrySubKeyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subkeys  []string           `protobuf:"bytes,1,rep,name=Subkeys,proto3" json:"Subkeys,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RegistrySubKeyList) Reset() {
	*x = RegistrySubKeyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrySubKeyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrySubKeyList) ProtoMessage() {}

func (x *RegistrySubKeyList) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrySubKeyList.ProtoReflect.Descriptor instead.
func (*RegistrySubKeyList) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{81}
}

func (x *RegistrySubKeyList) GetSubkeys() []string {
	if x != nil {
		return x.Subkeys
	}
	return nil
}

func (x *RegistrySubKeyList) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegistryListValuesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive string `protobuf:"bytes,1,opt,name=Hive,proto3" json:"Hive,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	// Keep the same ID as the other registry operations
	Hostname string            `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RegistryListValuesReq) Reset() {
	*x = RegistryListValuesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryListValuesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryListValuesReq) ProtoMessage() {}

func (x *RegistryListValuesReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryListValuesReq.ProtoReflect.Descriptor instead.
func (*RegistryListValuesReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{82}
}

func (x *RegistryListValuesReq) GetHive() string {
	if x != nil {
		return x.Hive
	}
	return ""
}

func (x *RegistryListValuesReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RegistryListValuesReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegistryListValuesReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RegistryValuesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueNames []string           `protobuf:"bytes,1,rep,name=ValueNames,proto3" json:"ValueNames,omitempty"`
	Response   *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RegistryValuesList) Reset() {
	*x = RegistryValuesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryValuesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryValuesList) ProtoMessage() {}

func (x *RegistryValuesList) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryValuesList.ProtoReflect.Descriptor instead.
func (*RegistryValuesList) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{83}
}

func (x *RegistryValuesList) GetValueNames() []string {
	if x != nil {
		return x.ValueNames
	}
	return nil
}

func (x *RegistryValuesList) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Tunnel - Tunnel related messages
type Tunnel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelID  uint64 `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"`
	SessionID uint32 `protobuf:"varint,9,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
}

func (x *Tunnel) Reset() {
	*x = Tunnel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tunnel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tunnel) ProtoMessage() {}

func (x *Tunnel) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tunnel.ProtoReflect.Descriptor instead.
func (*Tunnel) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{84}
}

func (x *Tunnel) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *Tunnel) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

type TunnelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Closed    bool   `protobuf:"varint,2,opt,name=Closed,proto3" json:"Closed,omitempty"`
	Sequence  uint64 `protobuf:"varint,3,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	Ack       uint64 `protobuf:"varint,4,opt,name=Ack,proto3" json:"Ack,omitempty"`
	Resend    bool   `protobuf:"varint,5,opt,name=Resend,proto3" json:"Resend,omitempty"`
	TunnelID  uint64 `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"`
	SessionID uint32 `protobuf:"varint,9,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
}

func (x *TunnelData) Reset() {
	*x = TunnelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelData) ProtoMessage() {}

func (x *TunnelData) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelData.ProtoReflect.Descriptor instead.
func (*TunnelData) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{85}
}

func (x *TunnelData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TunnelData) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *TunnelData) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *TunnelData) GetAck() uint64 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *TunnelData) GetResend() bool {
	if x != nil {
		return x.Resend
	}
	return false
}

func (x *TunnelData) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *TunnelData) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

// ShellReq - Request the implant open a realtime shell tunnel
type ShellReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string            `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	EnablePTY bool              `protobuf:"varint,2,opt,name=EnablePTY,proto3" json:"EnablePTY,omitempty"`
	Pid       uint32            `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	TunnelID  uint64            `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"` // Bind to this tunnel
	Request   *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ShellReq) Reset() {
	*x = ShellReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellReq) ProtoMessage() {}

func (x *ShellReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellReq.ProtoReflect.Descriptor instead.
func (*ShellReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{86}
}

func (x *ShellReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ShellReq) GetEnablePTY() bool {
	if x != nil {
		return x.EnablePTY
	}
	return false
}

func (x *ShellReq) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ShellReq) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *ShellReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

// Shell - Request the implant open a realtime shell tunnel
type Shell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	EnablePTY bool               `protobuf:"varint,2,opt,name=EnablePTY,proto3" json:"EnablePTY,omitempty"`
	Pid       uint32             `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	TunnelID  uint64             `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"`
	Response  *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Shell) Reset() {
	*x = Shell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shell) ProtoMessage() {}

func (x *Shell) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shell.ProtoReflect.Descriptor instead.
func (*Shell) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{87}
}

func (x *Shell) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Shell) GetEnablePTY() bool {
	if x != nil {
		return x.EnablePTY
	}
	return false
}

func (x *Shell) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Shell) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *Shell) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type PortfwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     uint32            `protobuf:"varint,1,opt,name=Port,proto3" json:"Port,omitempty"`
	Protocol int32             `protobuf:"varint,2,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Host     string            `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	TunnelID uint64            `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"` // Bind to this tunnel
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PortfwdReq) Reset() {
	*x = PortfwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfwdReq) ProtoMessage() {}

func (x *PortfwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfwdReq.ProtoReflect.Descriptor instead.
func (*PortfwdReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{88}
}

func (x *PortfwdReq) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PortfwdReq) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *PortfwdReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PortfwdReq) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *PortfwdReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Portfwd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     uint32             `protobuf:"varint,1,opt,name=Port,proto3" json:"Port,omitempty"`
	Protocol int32              `protobuf:"varint,2,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Host     string             `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	TunnelID uint64             `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"` // Bind to this tunnel
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Portfwd) Reset() {
	*x = Portfwd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Portfwd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Portfwd) ProtoMessage() {}

func (x *Portfwd) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Portfwd.ProtoReflect.Descriptor instead.
func (*Portfwd) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{89}
}

func (x *Portfwd) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Portfwd) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *Portfwd) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Portfwd) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *Portfwd) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Named Pipes Messages
type NamedPipesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipeName string            `protobuf:"bytes,16,opt,name=PipeName,proto3" json:"PipeName,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *NamedPipesReq) Reset() {
	*x = NamedPipesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedPipesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedPipesReq) ProtoMessage() {}

func (x *NamedPipesReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedPipesReq.ProtoReflect.Descriptor instead.
func (*NamedPipesReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{90}
}

func (x *NamedPipesReq) GetPipeName() string {
	if x != nil {
		return x.PipeName
	}
	return ""
}

func (x *NamedPipesReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type NamedPipes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *NamedPipes) Reset() {
	*x = NamedPipes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedPipes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedPipes) ProtoMessage() {}

func (x *NamedPipes) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedPipes.ProtoReflect.Descriptor instead.
func (*NamedPipes) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{91}
}

func (x *NamedPipes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NamedPipes) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// TCP Messages for pivoting
type TCPPivotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string            `protobuf:"bytes,16,opt,name=Address,proto3" json:"Address,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TCPPivotReq) Reset() {
	*x = TCPPivotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPPivotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPPivotReq) ProtoMessage() {}

func (x *TCPPivotReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPPivotReq.ProtoReflect.Descriptor instead.
func (*TCPPivotReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{92}
}

func (x *TCPPivotReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TCPPivotReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type TCPPivot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *TCPPivot) Reset() {
	*x = TCPPivot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPPivot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPPivot) ProtoMessage() {}

func (x *TCPPivot) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPPivot.ProtoReflect.Descriptor instead.
func (*TCPPivot) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{93}
}

func (x *TCPPivot) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TCPPivot) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Pivot transport
type PivotOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PivotID       uint32 `protobuf:"varint,12,opt,name=PivotID,proto3" json:"PivotID,omitempty"`
	PivotType     string `protobuf:"bytes,13,opt,name=PivotType,proto3" json:"PivotType,omitempty"`
	RemoteAddress string `protobuf:"bytes,14,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	RegisterMsg   []byte `protobuf:"bytes,15,opt,name=RegisterMsg,proto3" json:"RegisterMsg,omitempty"`
}

func (x *PivotOpen) Reset() {
	*x = PivotOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PivotOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PivotOpen) ProtoMessage() {}

func (x *PivotOpen) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PivotOpen.ProtoReflect.Descriptor instead.
func (*PivotOpen) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{94}
}

func (x *PivotOpen) GetPivotID() uint32 {
	if x != nil {
		return x.PivotID
	}
	return 0
}

func (x *PivotOpen) GetPivotType() string {
	if x != nil {
		return x.PivotType
	}
	return ""
}

func (x *PivotOpen) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *PivotOpen) GetRegisterMsg() []byte {
	if x != nil {
		return x.RegisterMsg
	}
	return nil
}

type PivotClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PivotID uint32 `protobuf:"varint,12,opt,name=PivotID,proto3" json:"PivotID,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *PivotClose) Reset() {
	*x = PivotClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PivotClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PivotClose) ProtoMessage() {}

func (x *PivotClose) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PivotClose.ProtoReflect.Descriptor instead.
func (*PivotClose) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{95}
}

func (x *PivotClose) GetPivotID() uint32 {
	if x != nil {
		return x.PivotID
	}
	return 0
}

func (x *PivotClose) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type PivotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PivotID uint32 `protobuf:"varint,12,opt,name=PivotID,proto3" json:"PivotID,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *PivotData) Reset() {
	*x = PivotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PivotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PivotData) ProtoMessage() {}

func (x *PivotData) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PivotData.ProtoReflect.Descriptor instead.
func (*PivotData) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{96}
}

func (x *PivotData) GetPivotID() uint32 {
	if x != nil {
		return x.PivotID
	}
	return 0
}

func (x *PivotData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PivotEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Remote string `protobuf:"bytes,2,opt,name=Remote,proto3" json:"Remote,omitempty"`
}

func (x *PivotEntry) Reset() {
	*x = PivotEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PivotEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PivotEntry) ProtoMessage() {}

func (x *PivotEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PivotEntry.ProtoReflect.Descriptor instead.
func (*PivotEntry) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{97}
}

func (x *PivotEntry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PivotEntry) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

type PivotListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PivotListReq) Reset() {
	*x = PivotListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PivotListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PivotListReq) ProtoMessage() {}

func (x *PivotListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PivotListReq.ProtoReflect.Descriptor instead.
func (*PivotListReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{98}
}

func (x *PivotListReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type PivotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries  []*PivotEntry      `protobuf:"bytes,1,rep,name=Entries,proto3" json:"Entries,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *PivotList) Reset() {
	*x = PivotList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PivotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PivotList) ProtoMessage() {}

func (x *PivotList) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PivotList.ProtoReflect.Descriptor instead.
func (*PivotList) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{99}
}

func (x *PivotList) GetEntries() []*PivotEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *PivotList) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type WGPortForwardStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalPort     int32             `protobuf:"varint,1,opt,name=LocalPort,proto3" json:"LocalPort,omitempty"`
	RemoteAddress string            `protobuf:"bytes,2,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	Request       *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WGPortForwardStartReq) Reset() {
	*x = WGPortForwardStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGPortForwardStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGPortForwardStartReq) ProtoMessage() {}

func (x *WGPortForwardStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGPortForwardStartReq.ProtoReflect.Descriptor instead.
func (*WGPortForwardStartReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{100}
}

func (x *WGPortForwardStartReq) GetLocalPort() int32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *WGPortForwardStartReq) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *WGPortForwardStartReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WGPortForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forwarder *WGTCPForwarder    `protobuf:"bytes,1,opt,name=Forwarder,proto3" json:"Forwarder,omitempty"`
	Response  *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *WGPortForward) Reset() {
	*x = WGPortForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGPortForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGPortForward) ProtoMessage() {}

func (x *WGPortForward) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGPortForward.ProtoReflect.Descriptor instead.
func (*WGPortForward) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{101}
}

func (x *WGPortForward) GetForwarder() *WGTCPForwarder {
	if x != nil {
		return x.Forwarder
	}
	return nil
}

func (x *WGPortForward) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type WGPortForwardStopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32             `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WGPortForwardStopReq) Reset() {
	*x = WGPortForwardStopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGPortForwardStopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGPortForwardStopReq) ProtoMessage() {}

func (x *WGPortForwardStopReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGPortForwardStopReq.ProtoReflect.Descriptor instead.
func (*WGPortForwardStopReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{102}
}

func (x *WGPortForwardStopReq) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WGPortForwardStopReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WGSocksStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port    int32             `protobuf:"varint,1,opt,name=Port,proto3" json:"Port,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WGSocksStartReq) Reset() {
	*x = WGSocksStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGSocksStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGSocksStartReq) ProtoMessage() {}

func (x *WGSocksStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGSocksStartReq.ProtoReflect.Descriptor instead.
func (*WGSocksStartReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{103}
}

func (x *WGSocksStartReq) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *WGSocksStartReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WGSocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server   *WGSocksServer     `protobuf:"bytes,1,opt,name=Server,proto3" json:"Server,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *WGSocks) Reset() {
	*x = WGSocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGSocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGSocks) ProtoMessage() {}

func (x *WGSocks) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGSocks.ProtoReflect.Descriptor instead.
func (*WGSocks) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{104}
}

func (x *WGSocks) GetServer() *WGSocksServer {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *WGSocks) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type WGSocksStopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32             `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WGSocksStopReq) Reset() {
	*x = WGSocksStopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGSocksStopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGSocksStopReq) ProtoMessage() {}

func (x *WGSocksStopReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGSocksStopReq.ProtoReflect.Descriptor instead.
func (*WGSocksStopReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{105}
}

func (x *WGSocksStopReq) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WGSocksStopReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WGTCPForwardersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WGTCPForwardersReq) Reset() {
	*x = WGTCPForwardersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGTCPForwardersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGTCPForwardersReq) ProtoMessage() {}

func (x *WGTCPForwardersReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGTCPForwardersReq.ProtoReflect.Descriptor instead.
func (*WGTCPForwardersReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{106}
}

func (x *WGTCPForwardersReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WGSocksServersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WGSocksServersReq) Reset() {
	*x = WGSocksServersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGSocksServersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGSocksServersReq) ProtoMessage() {}

func (x *WGSocksServersReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGSocksServersReq.ProtoReflect.Descriptor instead.
func (*WGSocksServersReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{107}
}

func (x *WGSocksServersReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WGTCPForwarder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	LocalAddr  string `protobuf:"bytes,2,opt,name=LocalAddr,proto3" json:"LocalAddr,omitempty"`
	RemoteAddr string `protobuf:"bytes,3,opt,name=RemoteAddr,proto3" json:"RemoteAddr,omitempty"`
}

func (x *WGTCPForwarder) Reset() {
	*x = WGTCPForwarder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGTCPForwarder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGTCPForwarder) ProtoMessage() {}

func (x *WGTCPForwarder) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGTCPForwarder.ProtoReflect.Descriptor instead.
func (*WGTCPForwarder) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{108}
}

func (x *WGTCPForwarder) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WGTCPForwarder) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

func (x *WGTCPForwarder) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

type WGSocksServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	LocalAddr string `protobuf:"bytes,2,opt,name=LocalAddr,proto3" json:"LocalAddr,omitempty"`
}

func (x *WGSocksServer) Reset() {
	*x = WGSocksServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGSocksServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGSocksServer) ProtoMessage() {}

func (x *WGSocksServer) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGSocksServer.ProtoReflect.Descriptor instead.
func (*WGSocksServer) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{109}
}

func (x *WGSocksServer) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WGSocksServer) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

type WGSocksServers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers  []*WGSocksServer   `protobuf:"bytes,1,rep,name=Servers,proto3" json:"Servers,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *WGSocksServers) Reset() {
	*x = WGSocksServers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGSocksServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGSocksServers) ProtoMessage() {}

func (x *WGSocksServers) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGSocksServers.ProtoReflect.Descriptor instead.
func (*WGSocksServers) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{110}
}

func (x *WGSocksServers) GetServers() []*WGSocksServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *WGSocksServers) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type WGTCPForwarders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forwarders []*WGTCPForwarder  `protobuf:"bytes,1,rep,name=Forwarders,proto3" json:"Forwarders,omitempty"`
	Response   *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *WGTCPForwarders) Reset() {
	*x = WGTCPForwarders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WGTCPForwarders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGTCPForwarders) ProtoMessage() {}

func (x *WGTCPForwarders) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGTCPForwarders.ProtoReflect.Descriptor instead.
func (*WGTCPForwarders) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{111}
}

func (x *WGTCPForwarders) GetForwarders() []*WGTCPForwarder {
	if x != nil {
		return x.Forwarders
	}
	return nil
}

func (x *WGTCPForwarders) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// ReconnectIntervalReq - Request the implant to update it's reconnect interval
type ReconnectIntervalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReconnectIntervalSeconds uint32            `protobuf:"varint,1,opt,name=ReconnectIntervalSeconds,proto3" json:"ReconnectIntervalSeconds,omitempty"`
	Request                  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ReconnectIntervalReq) Reset() {
	*x = ReconnectIntervalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectIntervalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectIntervalReq) ProtoMessage() {}

func (x *ReconnectIntervalReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectIntervalReq.ProtoReflect.Descriptor instead.
func (*ReconnectIntervalReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{112}
}

func (x *ReconnectIntervalReq) GetReconnectIntervalSeconds() uint32 {
	if x != nil {
		return x.ReconnectIntervalSeconds
	}
	return 0
}

func (x *ReconnectIntervalReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ReconnectInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ReconnectInterval) Reset() {
	*x = ReconnectInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectInterval) ProtoMessage() {}

func (x *ReconnectInterval) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectInterval.ProtoReflect.Descriptor instead.
func (*ReconnectInterval) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{113}
}

func (x *ReconnectInterval) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// PollIntervalReq - Request the implant to update it's poll intervbal
type PollIntervalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollIntervalSeconds uint32            `protobuf:"varint,1,opt,name=PollIntervalSeconds,proto3" json:"PollIntervalSeconds,omitempty"`
	Request             *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PollIntervalReq) Reset() {
	*x = PollIntervalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollIntervalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollIntervalReq) ProtoMessage() {}

func (x *PollIntervalReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollIntervalReq.ProtoReflect.Descriptor instead.
func (*PollIntervalReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{114}
}

func (x *PollIntervalReq) GetPollIntervalSeconds() uint32 {
	if x != nil {
		return x.PollIntervalSeconds
	}
	return 0
}

func (x *PollIntervalReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type PollInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *PollInterval) Reset() {
	*x = PollInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollInterval) ProtoMessage() {}

func (x *PollInterval) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollInterval.ProtoReflect.Descriptor instead.
func (*PollInterval) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{115}
}

func (x *PollInterval) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type SSHCommandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string            `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Hostname string            `protobuf:"bytes,2,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Port     uint32            `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Command  string            `protobuf:"bytes,4,opt,name=Command,proto3" json:"Command,omitempty"`
	Password string            `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	PrivKey  []byte            `protobuf:"bytes,6,opt,name=PrivKey,proto3" json:"PrivKey,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *SSHCommandReq) Reset() {
	*x = SSHCommandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHCommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHCommandReq) ProtoMessage() {}

func (x *SSHCommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHCommandReq.ProtoReflect.Descriptor instead.
func (*SSHCommandReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{116}
}

func (x *SSHCommandReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SSHCommandReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SSHCommandReq) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SSHCommandReq) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *SSHCommandReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SSHCommandReq) GetPrivKey() []byte {
	if x != nil {
		return x.PrivKey
	}
	return nil
}

func (x *SSHCommandReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SSHCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StdOut   string             `protobuf:"bytes,1,opt,name=StdOut,proto3" json:"StdOut,omitempty"`
	StdErr   string             `protobuf:"bytes,2,opt,name=StdErr,proto3" json:"StdErr,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *SSHCommand) Reset() {
	*x = SSHCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHCommand) ProtoMessage() {}

func (x *SSHCommand) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHCommand.ProtoReflect.Descriptor instead.
func (*SSHCommand) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{117}
}

func (x *SSHCommand) GetStdOut() string {
	if x != nil {
		return x.StdOut
	}
	return ""
}

func (x *SSHCommand) GetStdErr() string {
	if x != nil {
		return x.StdErr
	}
	return ""
}

func (x *SSHCommand) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type DllHijackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceDLLPath string            `protobuf:"bytes,1,opt,name=ReferenceDLLPath,proto3" json:"ReferenceDLLPath,omitempty"`
	TargetLocation   string            `protobuf:"bytes,2,opt,name=TargetLocation,proto3" json:"TargetLocation,omitempty"`
	ReferenceDLL     []byte            `protobuf:"bytes,3,opt,name=ReferenceDLL,proto3" json:"ReferenceDLL,omitempty"`
	TargetDLL        []byte            `protobuf:"bytes,4,opt,name=TargetDLL,proto3" json:"TargetDLL,omitempty"`
	ProfileName      string            `protobuf:"bytes,5,opt,name=ProfileName,proto3" json:"ProfileName,omitempty"`
	Request          *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *DllHijackReq) Reset() {
	*x = DllHijackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DllHijackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DllHijackReq) ProtoMessage() {}

func (x *DllHijackReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DllHijackReq.ProtoReflect.Descriptor instead.
func (*DllHijackReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{118}
}

func (x *DllHijackReq) GetReferenceDLLPath() string {
	if x != nil {
		return x.ReferenceDLLPath
	}
	return ""
}

func (x *DllHijackReq) GetTargetLocation() string {
	if x != nil {
		return x.TargetLocation
	}
	return ""
}

func (x *DllHijackReq) GetReferenceDLL() []byte {
	if x != nil {
		return x.ReferenceDLL
	}
	return nil
}

func (x *DllHijackReq) GetTargetDLL() []byte {
	if x != nil {
		return x.TargetDLL
	}
	return nil
}

func (x *DllHijackReq) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *DllHijackReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type DllHijack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *DllHijack) Reset() {
	*x = DllHijack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DllHijack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DllHijack) ProtoMessage() {}

func (x *DllHijack) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DllHijack.ProtoReflect.Descriptor instead.
func (*DllHijack) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{119}
}

func (x *DllHijack) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetPrivsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *GetPrivsReq) Reset() {
	*x = GetPrivsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivsReq) ProtoMessage() {}

func (x *GetPrivsReq) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivsReq.ProtoReflect.Descriptor instead.
func (*GetPrivsReq) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{120}
}

func (x *GetPrivsReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WindowsPrivilegeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	Enabled          bool   `protobuf:"varint,3,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	EnabledByDefault bool   `protobuf:"varint,4,opt,name=EnabledByDefault,proto3" json:"EnabledByDefault,omitempty"`
	Removed          bool   `protobuf:"varint,5,opt,name=Removed,proto3" json:"Removed,omitempty"`
	UsedForAccess    bool   `protobuf:"varint,6,opt,name=UsedForAccess,proto3" json:"UsedForAccess,omitempty"`
}

func (x *WindowsPrivilegeEntry) Reset() {
	*x = WindowsPrivilegeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindowsPrivilegeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowsPrivilegeEntry) ProtoMessage() {}

func (x *WindowsPrivilegeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowsPrivilegeEntry.ProtoReflect.Descriptor instead.
func (*WindowsPrivilegeEntry) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{121}
}

func (x *WindowsPrivilegeEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WindowsPrivilegeEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WindowsPrivilegeEntry) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *WindowsPrivilegeEntry) GetEnabledByDefault() bool {
	if x != nil {
		return x.EnabledByDefault
	}
	return false
}

func (x *WindowsPrivilegeEntry) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

func (x *WindowsPrivilegeEntry) GetUsedForAccess() bool {
	if x != nil {
		return x.UsedForAccess
	}
	return false
}

type GetPrivs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivInfo []*WindowsPrivilegeEntry `protobuf:"bytes,1,rep,name=PrivInfo,proto3" json:"PrivInfo,omitempty"`
	Response *commonpb.Response       `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *GetPrivs) Reset() {
	*x = GetPrivs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivs) ProtoMessage() {}

func (x *GetPrivs) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivs.ProtoReflect.Descriptor instead.
func (*GetPrivs) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{122}
}

func (x *GetPrivs) GetPrivInfo() []*WindowsPrivilegeEntry {
	if x != nil {
		return x.PrivInfo
	}
	return nil
}

func (x *GetPrivs) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type SockTabEntry_SockAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port uint32 `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *SockTabEntry_SockAddr) Reset() {
	*x = SockTabEntry_SockAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sliverpb_sliver_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SockTabEntry_SockAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SockTabEntry_SockAddr) ProtoMessage() {}

func (x *SockTabEntry_SockAddr) ProtoReflect() protoreflect.Message {
	mi := &file_sliverpb_sliver_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SockTabEntry_SockAddr.ProtoReflect.Descriptor instead.
func (*SockTabEntry_SockAddr) Descriptor() ([]byte, []int) {
	return file_sliverpb_sliver_proto_rawDescGZIP(), []int{53, 0}
}

func (x *SockTabEntry_SockAddr) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SockTabEntry_SockAddr) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_sliverpb_sliver_proto protoreflect.FileDescriptor

var file_sliverpb_sliver_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x73, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70,
	0x62, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x84, 0x03, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x47,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x4f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x41, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x50, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53,
	0x0a, 0x0e, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x05, 0x50, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x02, 0x50, 0x73, 0x12,
	0x2f, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x63, 0x0a, 0x0c, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x09, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x50, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x49, 0x66, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x78, 0x0a, 0x08, 0x49, 0x66, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0d,
	0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0d, 0x4e, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x0c, 0x4e, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x41, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x41, 0x43, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x05, 0x4c, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x02, 0x4c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x48, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x49, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x05, 0x43, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x06, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x03, 0x50, 0x77,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x05, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x02, 0x52, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a,
	0x08, 0x4d, 0x6b, 0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x05, 0x4d, 0x6b,
	0x64, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a,
	0x0a, 0x09, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x06, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x75,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x41, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4f, 0x0a, 0x05, 0x52, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d,
	0x0a, 0x0b, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x0a,
	0x0c, 0x52, 0x65, 0x76, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x52, 0x65,
	0x76, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x48, 0x6f, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3b, 0x0a, 0x09, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x57, 0x58, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x57, 0x58, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x12,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x4c, 0x4c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x44, 0x4c, 0x4c, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x72, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x75, 0x0a, 0x18, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x07, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x79, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x0f, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x07, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4b,
	0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x4c, 0x4c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x4c, 0x4c, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x08, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x11, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x44, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69,
	0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x2b,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x0b,
	0x53, 0x70, 0x61, 0x77, 0x6e, 0x44, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4b, 0x69, 0x6c,
	0x6c, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52,
	0x0a, 0x08, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x44, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x54, 0x43, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x55, 0x44, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x50, 0x34, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x49, 0x50, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x50, 0x36, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x49, 0x50, 0x36, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xb3, 0x02, 0x0a, 0x0c, 0x53, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49,
	0x44, 0x12, 0x2b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x2e, 0x0a, 0x08, 0x53, 0x6f,
	0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x6b, 0x0a, 0x07, 0x4e, 0x65,
	0x74, 0x73, 0x74, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x06, 0x45, 0x6e, 0x76, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x69, 0x0a, 0x07, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a,
	0x09, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x76, 0x56,
	0x61, 0x72, 0x52, 0x09, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x52, 0x08,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x12,
	0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4e, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3a, 0x0a, 0x08, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x12, 0x2e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x0e, 0x44,
	0x4e, 0x53, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22,
	0x3b, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x4e, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x34, 0x0a, 0x0e,
	0x44, 0x4e, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x3c, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x42, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a,
	0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a,
	0x0e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x3a, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x64, 0x6f, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3a, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x64, 0x6f, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48,
	0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x54, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x48, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x69, 0x76,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x42, 0x79, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x57, 0x6f, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x44, 0x57, 0x6f, 0x72, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x57, 0x6f, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x51, 0x57, 0x6f, 0x72, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x69,
	0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x48, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x48, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5e, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x48,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x69, 0x76, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x12,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x08,
	0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x41, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x9b, 0x01, 0x0a, 0x08, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x54, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x54, 0x59, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x54, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01,
	0x52, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x05, 0x53, 0x68, 0x65, 0x6c,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x54, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x54, 0x59, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08,
	0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x69,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x69, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x56, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x69, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x0b, 0x54, 0x43, 0x50, 0x50, 0x69,
	0x76, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a,
	0x08, 0x54, 0x43, 0x50, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x4f, 0x70, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x69, 0x76, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x69, 0x76, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x22, 0x39, 0x0a, 0x09, 0x50,
	0x69, 0x76, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x76, 0x6f,
	0x74, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x69, 0x76, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x22, 0x3b, 0x0a, 0x0c, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a,
	0x09, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x57,
	0x47, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x0d, 0x57, 0x47, 0x50, 0x6f, 0x72, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x57, 0x47, 0x54, 0x43, 0x50, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x09, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53,
	0x0a, 0x14, 0x57, 0x47, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x0f, 0x57, 0x47, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x07, 0x57, 0x47, 0x53, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x57, 0x47,
	0x53, 0x6f, 0x63, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x0e, 0x57, 0x47, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x41, 0x0a, 0x12, 0x57, 0x47, 0x54, 0x43, 0x50, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x11, 0x57, 0x47, 0x53, 0x6f, 0x63, 0x6b, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x0e, 0x57, 0x47, 0x54, 0x43, 0x50,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x22, 0x3d, 0x0a, 0x0d, 0x57, 0x47, 0x53, 0x6f, 0x63,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x22, 0x73, 0x0a, 0x0e, 0x57, 0x47, 0x53, 0x6f, 0x63, 0x6b,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x57, 0x47, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x0f, 0x57,
	0x47, 0x54, 0x43, 0x50, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x38,
	0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x57, 0x47,
	0x54, 0x43, 0x50, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x3a, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70,
	0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x3e, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x53, 0x53, 0x48, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x2b,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x0a, 0x53,
	0x53, 0x48, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64,
	0x4f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x64, 0x4f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x74, 0x64, 0x45, 0x72, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x0c, 0x44, 0x6c,
	0x6c, 0x48, 0x69, 0x6a, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x4c, 0x4c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44,
	0x4c, 0x4c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x4c, 0x4c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44,
	0x4c, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x4c, 0x4c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x4c, 0x4c,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3b, 0x0a, 0x09, 0x44, 0x6c, 0x6c, 0x48, 0x69, 0x6a, 0x61, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x15, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x73, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x64,
	0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x55, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x77,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x50, 0x72,
	0x69, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x50,
	0x72, 0x69, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x66, 0x6f, 0x78, 0x2f,
	0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sliverpb_sliver_proto_rawDescOnce sync.Once
	file_sliverpb_sliver_proto_rawDescData = file_sliverpb_sliver_proto_rawDesc
)

func file_sliverpb_sliver_proto_rawDescGZIP() []byte {
	file_sliverpb_sliver_proto_rawDescOnce.Do(func() {
		file_sliverpb_sliver_proto_rawDescData = protoimpl.X.CompressGZIP(file_sliverpb_sliver_proto_rawDescData)
	})
	return file_sliverpb_sliver_proto_rawDescData
}

var file_sliverpb_sliver_proto_msgTypes = make([]protoimpl.MessageInfo, 124)
var file_sliverpb_sliver_proto_goTypes = []interface{}{
	(*Envelope)(nil),                 // 0: sliverpb.Envelope
	(*Register)(nil),                 // 1: sliverpb.Register
	(*Ping)(nil),                     // 2: sliverpb.Ping
	(*KillSessionReq)(nil),           // 3: sliverpb.KillSessionReq
	(*PsReq)(nil),                    // 4: sliverpb.PsReq
	(*Ps)(nil),                       // 5: sliverpb.Ps
	(*TerminateReq)(nil),             // 6: sliverpb.TerminateReq
	(*Terminate)(nil),                // 7: sliverpb.Terminate
	(*IfconfigReq)(nil),              // 8: sliverpb.IfconfigReq
	(*Ifconfig)(nil),                 // 9: sliverpb.Ifconfig
	(*NetInterface)(nil),             // 10: sliverpb.NetInterface
	(*LsReq)(nil),                    // 11: sliverpb.LsReq
	(*Ls)(nil),                       // 12: sliverpb.Ls
	(*FileInfo)(nil),                 // 13: sliverpb.FileInfo
	(*CdReq)(nil),                    // 14: sliverpb.CdReq
	(*PwdReq)(nil),                   // 15: sliverpb.PwdReq
	(*Pwd)(nil),                      // 16: sliverpb.Pwd
	(*RmReq)(nil),                    // 17: sliverpb.RmReq
	(*Rm)(nil),                       // 18: sliverpb.Rm
	(*MkdirReq)(nil),                 // 19: sliverpb.MkdirReq
	(*Mkdir)(nil),                    // 20: sliverpb.Mkdir
	(*DownloadReq)(nil),              // 21: sliverpb.DownloadReq
	(*Download)(nil),                 // 22: sliverpb.Download
	(*UploadReq)(nil),                // 23: sliverpb.UploadReq
	(*Upload)(nil),                   // 24: sliverpb.Upload
	(*ProcessDumpReq)(nil),           // 25: sliverpb.ProcessDumpReq
	(*ProcessDump)(nil),              // 26: sliverpb.ProcessDump
	(*RunAsReq)(nil),                 // 27: sliverpb.RunAsReq
	(*RunAs)(nil),                    // 28: sliverpb.RunAs
	(*ImpersonateReq)(nil),           // 29: sliverpb.ImpersonateReq
	(*Impersonate)(nil),              // 30: sliverpb.Impersonate
	(*RevToSelfReq)(nil),             // 31: sliverpb.RevToSelfReq
	(*RevToSelf)(nil),                // 32: sliverpb.RevToSelf
	(*InvokeGetSystemReq)(nil),       // 33: sliverpb.InvokeGetSystemReq
	(*GetSystem)(nil),                // 34: sliverpb.GetSystem
	(*MakeTokenReq)(nil),             // 35: sliverpb.MakeTokenReq
	(*MakeToken)(nil),                // 36: sliverpb.MakeToken
	(*TaskReq)(nil),                  // 37: sliverpb.TaskReq
	(*Task)(nil),                     // 38: sliverpb.Task
	(*ExecuteAssemblyReq)(nil),       // 39: sliverpb.ExecuteAssemblyReq
	(*InvokeExecuteAssemblyReq)(nil), // 40: sliverpb.InvokeExecuteAssemblyReq
	(*ExecuteAssembly)(nil),          // 41: sliverpb.ExecuteAssembly
	(*InvokeMigrateReq)(nil),         // 42: sliverpb.InvokeMigrateReq
	(*Migrate)(nil),                  // 43: sliverpb.Migrate
	(*ExecuteReq)(nil),               // 44: sliverpb.ExecuteReq
	(*ExecuteTokenReq)(nil),          // 45: sliverpb.ExecuteTokenReq
	(*Execute)(nil),                  // 46: sliverpb.Execute
	(*SideloadReq)(nil),              // 47: sliverpb.SideloadReq
	(*Sideload)(nil),                 // 48: sliverpb.Sideload
	(*InvokeSpawnDllReq)(nil),        // 49: sliverpb.InvokeSpawnDllReq
	(*SpawnDllReq)(nil),              // 50: sliverpb.SpawnDllReq
	(*SpawnDll)(nil),                 // 51: sliverpb.SpawnDll
	(*NetstatReq)(nil),               // 52: sliverpb.NetstatReq
	(*SockTabEntry)(nil),             // 53: sliverpb.SockTabEntry
	(*Netstat)(nil),                  // 54: sliverpb.Netstat
	(*EnvReq)(nil),                   // 55: sliverpb.EnvReq
	(*EnvInfo)(nil),                  // 56: sliverpb.EnvInfo
	(*SetEnvReq)(nil),                // 57: sliverpb.SetEnvReq
	(*SetEnv)(nil),                   // 58: sliverpb.SetEnv
	(*UnsetEnvReq)(nil),              // 59: sliverpb.UnsetEnvReq
	(*UnsetEnv)(nil),                 // 60: sliverpb.UnsetEnv
	(*DNSSessionInit)(nil),           // 61: sliverpb.DNSSessionInit
	(*DNSPoll)(nil),                  // 62: sliverpb.DNSPoll
	(*DNSBlockHeader)(nil),           // 63: sliverpb.DNSBlockHeader
	(*HTTPSessionInit)(nil),          // 64: sliverpb.HTTPSessionInit
	(*ScreenshotReq)(nil),            // 65: sliverpb.ScreenshotReq
	(*Screenshot)(nil),               // 66: sliverpb.Screenshot
	(*StartServiceReq)(nil),          // 67: sliverpb.StartServiceReq
	(*ServiceInfo)(nil),              // 68: sliverpb.ServiceInfo
	(*ServiceInfoReq)(nil),           // 69: sliverpb.ServiceInfoReq
	(*StopServiceReq)(nil),           // 70: sliverpb.StopServiceReq
	(*RemoveServiceReq)(nil),         // 71: sliverpb.RemoveServiceReq
	(*BackdoorReq)(nil),              // 72: sliverpb.BackdoorReq
	(*Backdoor)(nil),                 // 73: sliverpb.Backdoor
	(*RegistryReadReq)(nil),          // 74: sliverpb.RegistryReadReq
	(*RegistryRead)(nil),             // 75: sliverpb.RegistryRead
	(*RegistryWriteReq)(nil),         // 76: sliverpb.RegistryWriteReq
	(*RegistryWrite)(nil),            // 77: sliverpb.RegistryWrite
	(*RegistryCreateKeyReq)(nil),     // 78: sliverpb.RegistryCreateKeyReq
	(*RegistryCreateKey)(nil),        // 79: sliverpb.RegistryCreateKey
	(*RegistrySubKeyListReq)(nil),    // 80: sliverpb.RegistrySubKeyListReq
	(*RegistrySubKeyList)(nil),       // 81: sliverpb.RegistrySubKeyList
	(*RegistryListValuesReq)(nil),    // 82: sliverpb.RegistryListValuesReq
	(*RegistryValuesList)(nil),       // 83: sliverpb.RegistryValuesList
	(*Tunnel)(nil),                   // 84: sliverpb.Tunnel
	(*TunnelData)(nil),               // 85: sliverpb.TunnelData
	(*ShellReq)(nil),                 // 86: sliverpb.ShellReq
	(*Shell)(nil),                    // 87: sliverpb.Shell
	(*PortfwdReq)(nil),               // 88: sliverpb.PortfwdReq
	(*Portfwd)(nil),                  // 89: sliverpb.Portfwd
	(*NamedPipesReq)(nil),            // 90: sliverpb.NamedPipesReq
	(*NamedPipes)(nil),               // 91: sliverpb.NamedPipes
	(*TCPPivotReq)(nil),              // 92: sliverpb.TCPPivotReq
	(*TCPPivot)(nil),                 // 93: sliverpb.TCPPivot
	(*PivotOpen)(nil),                // 94: sliverpb.PivotOpen
	(*PivotClose)(nil),               // 95: sliverpb.PivotClose
	(*PivotData)(nil),                // 96: sliverpb.PivotData
	(*PivotEntry)(nil),               // 97: sliverpb.PivotEntry
	(*PivotListReq)(nil),             // 98: sliverpb.PivotListReq
	(*PivotList)(nil),                // 99: sliverpb.PivotList
	(*WGPortForwardStartReq)(nil),    // 100: sliverpb.WGPortForwardStartReq
	(*WGPortForward)(nil),            // 101: sliverpb.WGPortForward
	(*WGPortForwardStopReq)(nil),     // 102: sliverpb.WGPortForwardStopReq
	(*WGSocksStartReq)(nil),          // 103: sliverpb.WGSocksStartReq
	(*WGSocks)(nil),                  // 104: sliverpb.WGSocks
	(*WGSocksStopReq)(nil),           // 105: sliverpb.WGSocksStopReq
	(*WGTCPForwardersReq)(nil),       // 106: sliverpb.WGTCPForwardersReq
	(*WGSocksServersReq)(nil),        // 107: sliverpb.WGSocksServersReq
	(*WGTCPForwarder)(nil),           // 108: sliverpb.WGTCPForwarder
	(*WGSocksServer)(nil),            // 109: sliverpb.WGSocksServer
	(*WGSocksServers)(nil),           // 110: sliverpb.WGSocksServers
	(*WGTCPForwarders)(nil),          // 111: sliverpb.WGTCPForwarders
	(*ReconnectIntervalReq)(nil),     // 112: sliverpb.ReconnectIntervalReq
	(*ReconnectInterval)(nil),        // 113: sliverpb.ReconnectInterval
	(*PollIntervalReq)(nil),          // 114: sliverpb.PollIntervalReq
	(*PollInterval)(nil),             // 115: sliverpb.PollInterval
	(*SSHCommandReq)(nil),            // 116: sliverpb.SSHCommandReq
	(*SSHCommand)(nil),               // 117: sliverpb.SSHCommand
	(*DllHijackReq)(nil),             // 118: sliverpb.DllHijackReq
	(*DllHijack)(nil),                // 119: sliverpb.DllHijack
	(*GetPrivsReq)(nil),              // 120: sliverpb.GetPrivsReq
	(*WindowsPrivilegeEntry)(nil),    // 121: sliverpb.WindowsPrivilegeEntry
	(*GetPrivs)(nil),                 // 122: sliverpb.GetPrivs
	(*SockTabEntry_SockAddr)(nil),    // 123: sliverpb.SockTabEntry.SockAddr
	(*commonpb.Response)(nil),        // 124: commonpb.Response
	(*commonpb.Request)(nil),         // 125: commonpb.Request
	(*commonpb.Process)(nil),         // 126: commonpb.Process
	(*commonpb.EnvVar)(nil),          // 127: commonpb.EnvVar
}
var file_sliverpb_sliver_proto_depIdxs = []int32{
	124, // 0: sliverpb.Ping.Response:type_name -> commonpb.Response
	125, // 1: sliverpb.Ping.Request:type_name -> commonpb.Request
	125, // 2: sliverpb.KillSessionReq.Request:type_name -> commonpb.Request
	125, // 3: sliverpb.PsReq.Request:type_name -> commonpb.Request
	126, // 4: sliverpb.Ps.Processes:type_name -> commonpb.Process
	124, // 5: sliverpb.Ps.Response:type_name -> commonpb.Response
	125, // 6: sliverpb.TerminateReq.Request:type_name -> commonpb.Request
	124, // 7: sliverpb.Terminate.Response:type_name -> commonpb.Response
	125, // 8: sliverpb.IfconfigReq.Request:type_name -> commonpb.Request
	10,  // 9: sliverpb.Ifconfig.NetInterfaces:type_name -> sliverpb.NetInterface
	124, // 10: sliverpb.Ifconfig.Response:type_name -> commonpb.Response
	125, // 11: sliverpb.LsReq.Request:type_name -> commonpb.Request
	13,  // 12: sliverpb.Ls.Files:type_name -> sliverpb.FileInfo
	124, // 13: sliverpb.Ls.Response:type_name -> commonpb.Response
	125, // 14: sliverpb.CdReq.Request:type_name -> commonpb.Request
	125, // 15: sliverpb.PwdReq.Request:type_name -> commonpb.Request
	124, // 16: sliverpb.Pwd.Response:type_name -> commonpb.Response
	125, // 17: sliverpb.RmReq.Request:type_name -> commonpb.Request
	124, // 18: sliverpb.Rm.Response:type_name -> commonpb.Response
	125, // 19: sliverpb.MkdirReq.Request:type_name -> commonpb.Request
	124, // 20: sliverpb.Mkdir.Response:type_name -> commonpb.Response
	125, // 21: sliverpb.DownloadReq.Request:type_name -> commonpb.Request
	124, // 22: sliverpb.Download.Response:type_name -> commonpb.Response
	125, // 23: sliverpb.UploadReq.Request:type_name -> commonpb.Request
	124, // 24: sliverpb.Upload.Response:type_name -> commonpb.Response
	125, // 25: sliverpb.ProcessDumpReq.Request:type_name -> commonpb.Request
	124, // 26: sliverpb.ProcessDump.Response:type_name -> commonpb.Response
	125, // 27: sliverpb.RunAsReq.Request:type_name -> commonpb.Request
	124, // 28: sliverpb.RunAs.Response:type_name -> commonpb.Response
	125, // 29: sliverpb.ImpersonateReq.Request:type_name -> commonpb.Request
	124, // 30: sliverpb.Impersonate.Response:type_name -> commonpb.Response
	125, // 31: sliverpb.RevToSelfReq.Request:type_name -> commonpb.Request
	124, // 32: sliverpb.RevToSelf.Response:type_name -> commonpb.Response
	125, // 33: sliverpb.InvokeGetSystemReq.Request:type_name -> commonpb.Request
	124, // 34: sliverpb.GetSystem.Response:type_name -> commonpb.Response
	125, // 35: sliverpb.MakeTokenReq.Request:type_name -> commonpb.Request
	124, // 36: sliverpb.MakeToken.Response:type_name -> commonpb.Response
	125, // 37: sliverpb.TaskReq.Request:type_name -> commonpb.Request
	124, // 38: sliverpb.Task.Response:type_name -> commonpb.Response
	125, // 39: sliverpb.ExecuteAssemblyReq.Request:type_name -> commonpb.Request
	125, // 40: sliverpb.InvokeExecuteAssemblyReq.Request:type_name -> commonpb.Request
	124, // 41: sliverpb.ExecuteAssembly.Response:type_name -> commonpb.Response
	125, // 42: sliverpb.InvokeMigrateReq.Request:type_name -> commonpb.Request
	124, // 43: sliverpb.Migrate.Response:type_name -> commonpb.Response
	125, // 44: sliverpb.ExecuteReq.Request:type_name -> commonpb.Request
	125, // 45: sliverpb.ExecuteTokenReq.Request:type_name -> commonpb.Request
	124, // 46: sliverpb.Execute.Response:type_name -> commonpb.Response
	125, // 47: sliverpb.SideloadReq.Request:type_name -> commonpb.Request
	124, // 48: sliverpb.Sideload.Response:type_name -> commonpb.Response
	125, // 49: sliverpb.InvokeSpawnDllReq.Request:type_name -> commonpb.Request
	125, // 50: sliverpb.SpawnDllReq.Request:type_name -> commonpb.Request
	124, // 51: sliverpb.SpawnDll.Response:type_name -> commonpb.Response
	125, // 52: sliverpb.NetstatReq.Request:type_name -> commonpb.Request
	123, // 53: sliverpb.SockTabEntry.LocalAddr:type_name -> sliverpb.SockTabEntry.SockAddr
	123, // 54: sliverpb.SockTabEntry.RemoteAddr:type_name -> sliverpb.SockTabEntry.SockAddr
	126, // 55: sliverpb.SockTabEntry.Process:type_name -> commonpb.Process
	53,  // 56: sliverpb.Netstat.Entries:type_name -> sliverpb.SockTabEntry
	124, // 57: sliverpb.Netstat.Response:type_name -> commonpb.Response
	125, // 58: sliverpb.EnvReq.Request:type_name -> commonpb.Request
	127, // 59: sliverpb.EnvInfo.Variables:type_name -> commonpb.EnvVar
	124, // 60: sliverpb.EnvInfo.Response:type_name -> commonpb.Response
	127, // 61: sliverpb.SetEnvReq.Variable:type_name -> commonpb.EnvVar
	125, // 62: sliverpb.SetEnvReq.Request:type_name -> commonpb.Request
	124, // 63: sliverpb.SetEnv.Response:type_name -> commonpb.Response
	125, // 64: sliverpb.UnsetEnvReq.Request:type_name -> commonpb.Request
	124, // 65: sliverpb.UnsetEnv.Response:type_name -> commonpb.Response
	63,  // 66: sliverpb.DNSPoll.blocks:type_name -> sliverpb.DNSBlockHeader
	125, // 67: sliverpb.ScreenshotReq.Request:type_name -> commonpb.Request
	124, // 68: sliverpb.Screenshot.Response:type_name -> commonpb.Response
	125, // 69: sliverpb.StartServiceReq.Request:type_name -> commonpb.Request
	124, // 70: sliverpb.ServiceInfo.Response:type_name -> commonpb.Response
	69,  // 71: sliverpb.StopServiceReq.ServiceInfo:type_name -> sliverpb.ServiceInfoReq
	125, // 72: sliverpb.StopServiceReq.Request:type_name -> commonpb.Request
	69,  // 73: sliverpb.RemoveServiceReq.ServiceInfo:type_name -> sliverpb.ServiceInfoReq
	125, // 74: sliverpb.RemoveServiceReq.Request:type_name -> commonpb.Request
	125, // 75: sliverpb.BackdoorReq.Request:type_name -> commonpb.Request
	124, // 76: sliverpb.Backdoor.Response:type_name -> commonpb.Response
	125, // 77: sliverpb.RegistryReadReq.Request:type_name -> commonpb.Request
	124, // 78: sliverpb.RegistryRead.Response:type_name -> commonpb.Response
	125, // 79: sliverpb.RegistryWriteReq.Request:type_name -> commonpb.Request
	124, // 80: sliverpb.RegistryWrite.Response:type_name -> commonpb.Response
	125, // 81: sliverpb.RegistryCreateKeyReq.Request:type_name -> commonpb.Request
	124, // 82: sliverpb.RegistryCreateKey.Response:type_name -> commonpb.Response
	125, // 83: sliverpb.RegistrySubKeyListReq.Request:type_name -> commonpb.Request
	124, // 84: sliverpb.RegistrySubKeyList.Response:type_name -> commonpb.Response
	125, // 85: sliverpb.RegistryListValuesReq.Request:type_name -> commonpb.Request
	124, // 86: sliverpb.RegistryValuesList.Response:type_name -> commonpb.Response
	125, // 87: sliverpb.ShellReq.Request:type_name -> commonpb.Request
	124, // 88: sliverpb.Shell.Response:type_name -> commonpb.Response
	125, // 89: sliverpb.PortfwdReq.Request:type_name -> commonpb.Request
	124, // 90: sliverpb.Portfwd.Response:type_name -> commonpb.Response
	125, // 91: sliverpb.NamedPipesReq.Request:type_name -> commonpb.Request
	124, // 92: sliverpb.NamedPipes.Response:type_name -> commonpb.Response
	125, // 93: sliverpb.TCPPivotReq.Request:type_name -> commonpb.Request
	124, // 94: sliverpb.TCPPivot.Response:type_name -> commonpb.Response
	125, // 95: sliverpb.PivotListReq.Request:type_name -> commonpb.Request
	97,  // 96: sliverpb.PivotList.Entries:type_name -> sliverpb.PivotEntry
	124, // 97: sliverpb.PivotList.Response:type_name -> commonpb.Response
	125, // 98: sliverpb.WGPortForwardStartReq.Request:type_name -> commonpb.Request
	108, // 99: sliverpb.WGPortForward.Forwarder:type_name -> sliverpb.WGTCPForwarder
	124, // 100: sliverpb.WGPortForward.Response:type_name -> commonpb.Response
	125, // 101: sliverpb.WGPortForwardStopReq.Request:type_name -> commonpb.Request
	125, // 102: sliverpb.WGSocksStartReq.Request:type_name -> commonpb.Request
	109, // 103: sliverpb.WGSocks.Server:type_name -> sliverpb.WGSocksServer
	124, // 104: sliverpb.WGSocks.Response:type_name -> commonpb.Response
	125, // 105: sliverpb.WGSocksStopReq.Request:type_name -> commonpb.Request
	125, // 106: sliverpb.WGTCPForwardersReq.Request:type_name -> commonpb.Request
	125, // 107: sliverpb.WGSocksServersReq.Request:type_name -> commonpb.Request
	109, // 108: sliverpb.WGSocksServers.Servers:type_name -> sliverpb.WGSocksServer
	124, // 109: sliverpb.WGSocksServers.Response:type_name -> commonpb.Response
	108, // 110: sliverpb.WGTCPForwarders.Forwarders:type_name -> sliverpb.WGTCPForwarder
	124, // 111: sliverpb.WGTCPForwarders.Response:type_name -> commonpb.Response
	125, // 112: sliverpb.ReconnectIntervalReq.Request:type_name -> commonpb.Request
	124, // 113: sliverpb.ReconnectInterval.Response:type_name -> commonpb.Response
	125, // 114: sliverpb.PollIntervalReq.Request:type_name -> commonpb.Request
	124, // 115: sliverpb.PollInterval.Response:type_name -> commonpb.Response
	125, // 116: sliverpb.SSHCommandReq.Request:type_name -> commonpb.Request
	124, // 117: sliverpb.SSHCommand.Response:type_name -> commonpb.Response
	125, // 118: sliverpb.DllHijackReq.Request:type_name -> commonpb.Request
	124, // 119: sliverpb.DllHijack.Response:type_name -> commonpb.Response
	125, // 120: sliverpb.GetPrivsReq.Request:type_name -> commonpb.Request
	121, // 121: sliverpb.GetPrivs.PrivInfo:type_name -> sliverpb.WindowsPrivilegeEntry
	124, // 122: sliverpb.GetPrivs.Response:type_name -> commonpb.Response
	123, // [123:123] is the sub-list for method output_type
	123, // [123:123] is the sub-list for method input_type
	123, // [123:123] is the sub-list for extension type_name
	123, // [123:123] is the sub-list for extension extendee
	0,   // [0:123] is the sub-list for field type_name
}

func init() { file_sliverpb_sliver_proto_init() }
func file_sliverpb_sliver_proto_init() {
	if File_sliverpb_sliver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sliverpb_sliver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terminate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfconfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ifconfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pwd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MkdirReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mkdir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Download); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Upload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessDumpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessDump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunAs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpersonateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Impersonate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevToSelfReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevToSelf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeGetSystemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteAssemblyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeExecuteAssemblyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteAssembly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeMigrateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Migrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sideload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeSpawnDllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnDllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnDll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetstatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SockTabEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Netstat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetEnvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSSessionInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSPoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPSessionInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Screenshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackdoorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backdoor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryWriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryCreateKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryCreateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrySubKeyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrySubKeyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryListValuesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryValuesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tunnel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Portfwd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedPipesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedPipes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPPivotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPPivot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PivotOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PivotClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PivotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PivotEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PivotListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PivotList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGPortForwardStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGPortForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGPortForwardStopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGSocksStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGSocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGSocksStopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGTCPForwardersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGSocksServersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGTCPForwarder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGSocksServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGSocksServers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WGTCPForwarders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectIntervalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollIntervalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHCommandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DllHijackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DllHijack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindowsPrivilegeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrivs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sliverpb_sliver_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SockTabEntry_SockAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sliverpb_sliver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   124,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sliverpb_sliver_proto_goTypes,
		DependencyIndexes: file_sliverpb_sliver_proto_depIdxs,
		MessageInfos:      file_sliverpb_sliver_proto_msgTypes,
	}.Build()
	File_sliverpb_sliver_proto = out.File
	file_sliverpb_sliver_proto_rawDesc = nil
	file_sliverpb_sliver_proto_goTypes = nil
	file_sliverpb_sliver_proto_depIdxs = nil
}
